function FileData_Pairs(x)
{
x.t("passed","application");
x.t("supports","table");
x.t("satisfied","predicates");
x.t("equal","command");
x.t("equal","range");
x.t("equal","index");
x.t("equal","--sport");
x.t("example","example");
x.t("example","tcp");
x.t("example","consider");
x.t("example","--sport");
x.t("unlike","--jump");
x.t("included","exata");
x.t("parameter","firewall");
x.t("parameter","command");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("properties","characteristics");
x.t("icmp","match");
x.t("icmp","protocol");
x.t("protocols","command");
x.t("indicated","protocol");
x.t("hardware","components");
x.t("rather","packets");
x.t("2008","2013");
x.t("implement","network");
x.t("within","table");
x.t("80:100","match");
x.t("--goto","command");
x.t("--goto","chain-name");
x.t("lists","firewall");
x.t("lists","sub-directory");
x.t("scalable","network");
x.t("description","table");
x.t("description","table-name");
x.t("description","action");
x.t("description","identify");
x.t("description","chain");
x.t("description","input");
x.t("description","commands");
x.t("description","syntax");
x.t("description","specifies");
x.t("description","firewalls");
x.t("description","chain-name");
x.t("description","clauses");
x.t("description","optional");
x.t("description","protocol");
x.t("description","dmz-network");
x.t("table","table");
x.t("table","description");
x.t("table","new-chain-name");
x.t("table","firewall");
x.t("table","iptables");
x.t("table","command");
x.t("table","actions");
x.t("table","filter");
x.t("table","rule");
x.t("table","3-4");
x.t("table","clauses");
x.t("table","3-5");
x.t("table","3-10");
x.t("table","3-6");
x.t("table","3-7");
x.t("table","3-8");
x.t("table","3-9");
x.t("table","clause");
x.t("create","new");
x.t("create","chain");
x.t("rename","chain");
x.t("rename","custom");
x.t("3.2.4.1","format");
x.t("node-id","table-desc");
x.t("node-id","node");
x.t("describes","table");
x.t("describes","action");
x.t("describes","chain");
x.t("describes","predicate");
x.t("--out-interface","index");
x.t("layer","models");
x.t("layer","output");
x.t("layer","host");
x.t("once","packet");
x.t("source","address");
x.t("source","port");
x.t("negation","form");
x.t("cyber","parameters");
x.t("components","computer");
x.t("components","conditions");
x.t("firewall-config-file","firewall-config-file");
x.t("firewall-config-file","name");
x.t("firewall-config-file","setting");
x.t("parts","table");
x.t("action","action");
x.t("action","pair");
x.t("action","perform");
x.t("action","--append");
x.t("action","specifies");
x.t("action","--jump");
x.t("action","clauses");
x.t("action","following");
x.t("action","performed");
x.t("action","append");
x.t("action","conditions");
x.t("table-name","--table");
x.t("table-name","indicates");
x.t("table-name","filter");
x.t("flag","tcp");
x.t("flag","ack");
x.t("flag","--in-interface");
x.t("blacklisted","node");
x.t("tables","nat");
x.t("tcp/udp","header");
x.t("current","chain");
x.t("execute","following");
x.t("mangle","used");
x.t("implemented","features");
x.t("line","parameter");
x.t("line","firewall");
x.t("line","commands");
x.t("line","equivalent");
x.t("line","configuration");
x.t("new-chain-name","create");
x.t("new-chain-name","different");
x.t("new-chain-name","--new-chain");
x.t("pair","last");
x.t("last","rule");
x.t("field","tcp");
x.t("field","header");
x.t("later","fragments");
x.t("blacklist-node","multihop");
x.t("state","once");
x.t("state","firewall");
x.t("interface","firewall");
x.t("interface","exata");
x.t("interface","index");
x.t("extension","file");
x.t("fragmented","packet");
x.t("provided","response");
x.t("firewall","node-id");
x.t("firewall","firewall");
x.t("firewall","connection");
x.t("firewall","command");
x.t("firewall","actions");
x.t("firewall","rule");
x.t("firewall","commands");
x.t("firewall","scenarios");
x.t("firewall","rules");
x.t("firewall","configuration");
x.t("firewall","condition");
x.t("firewall","drop");
x.t("firewall","model");
x.t("type","fragmentation");
x.t("type","destination");
x.t("forwarded","network");
x.t("forwarded","host");
x.t("--table","table-name");
x.t("sample","scenarios");
x.t("exata","supports");
x.t("exata","exata");
x.t("exata","packet-based");
x.t("exata","gui");
x.t("exata","software");
x.t("exata","scenario");
x.t("exata","models");
x.t("exata","distribution");
x.t("exata","drop");
x.t("exata","based");
x.t("fragmentation","flags");
x.t("delete","rename");
x.t("packets","source");
x.t("packets","forwarded");
x.t("packets","satisfy");
x.t("packets","neither");
x.t("packets","destination");
x.t("packets","arrive");
x.t("packets","syn");
x.t("packets","node");
x.t("packets","successfully");
x.t("packets","generated");
x.t("packets","transmitted");
x.t("packets","inspected");
x.t("packets","dropped");
x.t("packets","--sport");
x.t("chain-desc","node-id");
x.t("chain-desc","chain");
x.t("chain-desc","syntax");
x.t("satisfy","action");
x.t("satisfy","firewall");
x.t("evaluate","true");
x.t("examined","written");
x.t("response","continue");
x.t("iptables","input");
x.t("iptables","syntax");
x.t("iptables","packet");
x.t("iptables","used");
x.t("connection","tracking");
x.t("identify","table");
x.t("identify","chain");
x.t("multiple","predicate");
x.t("form","--tcp-flags");
x.t("form","address");
x.t("form","--fragment");
x.t("form","--dport");
x.t("form","index");
x.t("form","protocol");
x.t("form","--sport");
x.t("execution","human-in-the-loop");
x.t("default","policy");
x.t("mac","header");
x.t("limitations","firewall");
x.t("10.10.0.0/255.255.255.0","command");
x.t("--dst","address");
x.t("back","parent");
x.t("summarize","above");
x.t("property","editor");
x.t("listed","table");
x.t("networks","firewall");
x.t("access","firewall");
x.t("access","security");
x.t("access","forward");
x.t("access","input");
x.t("access","internal");
x.t("access","output");
x.t("new","chain");
x.t("--src","address");
x.t("urg","psh");
x.t("http://www.netfilter.org","2008");
x.t("chain","unlike");
x.t("chain","within");
x.t("chain","description");
x.t("chain","create");
x.t("chain","rename");
x.t("chain","table");
x.t("chain","current");
x.t("chain","provided");
x.t("chain","firewall");
x.t("chain","chain");
x.t("chain","actions");
x.t("chain","filter");
x.t("chain","3.2.2.2");
x.t("chain","3.2.2.3");
x.t("chain","specified");
x.t("chain","via");
x.t("chain","operation");
x.t("chain","forward");
x.t("chain","input");
x.t("chain","syntax");
x.t("chain","number");
x.t("chain","index");
x.t("chain","instead");
x.t("chain","inspects");
x.t("chain","return");
x.t("chain","chain-name");
x.t("chain","clauses");
x.t("chain","output");
x.t("chain","policy");
x.t("chain","goto");
x.t("chain","called");
x.t("chain","3.2.8");
x.t("chain","append");
x.t("command","description");
x.t("command","negation");
x.t("command","line");
x.t("command","firewall");
x.t("command","chain-desc");
x.t("command","applies");
x.t("command","parameters");
x.t("command","specifies");
x.t("command","chain-name");
x.t("command","optional");
x.t("command","described");
x.t("command","two");
x.t("command","hitl");
x.t("command","per");
x.t("fragments","fragmented");
x.t("includes","several");
x.t("security","policies");
x.t("policies","traffic");
x.t("determines","based");
x.t("found","linux/unix");
x.t("file","table");
x.t("file","firewall-config-file");
x.t("file","firewall");
x.t("file","command");
x.t("file","filter");
x.t("file","name");
x.t("file","parameters");
x.t("file","three");
x.t("file","enumerates");
x.t("file","section");
x.t("file","end");
x.t("file","global");
x.t("file","3.2.6");
x.t("file",".firewall");
x.t("indicates","table");
x.t("indicates","source");
x.t("indicates","syn");
x.t("indicates","packet");
x.t("--destination","address");
x.t("upper","end");
x.t("list","flags");
x.t("list","check");
x.t("actions","create");
x.t("actions","tables");
x.t("actions","default");
x.t("actions","supported");
x.t("actions","unrelated");
x.t("actions","clauses");
x.t("actions","drop");
x.t("flags","tcp/udp");
x.t("flags","examined");
x.t("flags","flags");
x.t("flags","specified");
x.t("flags","unset");
x.t("flags","match");
x.t("flags","syn");
x.t("flags","incoming");
x.t("udp","match");
x.t("udp","header");
x.t("udp","protocol");
x.t("10.10.0.1","subnet");
x.t("fin","rst");
x.t("during","scenario");
x.t("enterprise","network");
x.t("network","layer");
x.t("network","blacklist-node");
x.t("network","technologies");
x.t("network","access");
x.t("network","private");
x.t("network","receive");
x.t("network","node");
x.t("network","dropped");
x.t("filter","table");
x.t("filter","chain");
x.t("filter","input");
x.t("filter","software");
x.t("3.2.2.1","implemented");
x.t("applies","firewall");
x.t("applies","chain");
x.t("applies","three");
x.t("--policy","chain-name");
x.t("check","index");
x.t("check","match");
x.t("check","comma-separated");
x.t("3.2","firewall");
x.t("traffic","follows");
x.t("traffic","allowed");
x.t("traffic","pass");
x.t("linux/unix","based");
x.t("features","delete");
x.t("features","filter");
x.t("features","assumptions");
x.t("tcp","flags");
x.t("tcp","udp");
x.t("tcp","--tcp-flags");
x.t("tcp","match");
x.t("tcp","header");
x.t("tcp","protocol");
x.t("3.2.2.2","omitted");
x.t("recommended","filename");
x.t("--tcp-flags","mask");
x.t("--tcp-flags","syn");
x.t("netfilter.org","project");
x.t("processed","firewall");
x.t("3.2.2.3","assumptions");
x.t("specified","table");
x.t("specified","firewall");
x.t("specified","packets");
x.t("specified","mask");
x.t("specified","syntax");
x.t("specified","chain-name");
x.t("specified","conditions");
x.t("handle","different");
x.t("delivered","applications");
x.t("true","predicate");
x.t("true","drop");
x.t("true","conditions");
x.t("via","--jump");
x.t("[1]","specifically");
x.t("forward","chain");
x.t("forward","chains");
x.t("forward","user-defined");
x.t("name","firewall");
x.t("name","chain");
x.t("name","file");
x.t("operation","perform");
x.t("10.10.0.0/24","indicates");
x.t("10.10.0.0/24","--tcp-flags");
x.t("10.10.0.0/24","syn");
x.t("10.10.0.0/24","subnet");
x.t("range","omitted");
x.t("range","100");
x.t("range","e.g");
x.t("follows","input");
x.t("previously","defined");
x.t("inclusive","either");
x.t("wireless","network");
x.t("references","netfilter.org");
x.t("custom","chain");
x.t("custom","chains");
x.t("neither","generated");
x.t("perform","chain");
x.t("perform","three");
x.t("perform","packet");
x.t("entered","line");
x.t("filtering","modification");
x.t("rule","current");
x.t("rule","firewall");
x.t("rule","chain");
x.t("rule","actions");
x.t("rule","applies");
x.t("rule","appended");
x.t("rule","activated");
x.t("rule","configured");
x.t("rule","instructs");
x.t("rule","defined");
x.t("rule","predicates");
x.t("rule","two");
x.t("rule","insert");
x.t("none","example");
x.t("none","3.2.4");
x.t("parameters","firewall");
x.t("parameters","listed");
x.t("parameters","entered");
x.t("parameters","gui");
x.t("zero","multiple");
x.t("further","rules");
x.t("determine","packet");
x.t("continue","next");
x.t("continue","processing");
x.t("continue","matching");
x.t("appended","input");
x.t("appended","three");
x.t("modification","actions");
x.t("address","source");
x.t("address","field");
x.t("address","type");
x.t("address","--dst");
x.t("address","--src");
x.t("address","--destination");
x.t("address","tcp");
x.t("address","destination");
x.t("address","address");
x.t("address","--fragment");
x.t("address","--source");
x.t("address","match");
x.t("address","header");
x.t("address","e.g");
x.t("address","host");
x.t("address","following");
x.t("address","subnet");
x.t("destination","address");
x.t("destination","port");
x.t("matched","against");
x.t("--append","chain-name");
x.t("strings","tcp");
x.t("--fragment","match");
x.t("proceed","protocol");
x.t("stack","further");
x.t("implies","rules");
x.t("allow","proceed");
x.t("exata_home","/scenarios/cyber/firewall");
x.t("input","chain");
x.t("input","10.10.0.0/24");
x.t("input","output");
x.t("outgoing","interface");
x.t("outgoing","packets");
x.t("three","chains");
x.t("three","predicates");
x.t("three","predefined");
x.t("mask","flags");
x.t("mask","check");
x.t("mask","notation");
x.t("second","later");
x.t("ports","range");
x.t("ports","greater");
x.t("ports","less");
x.t("sub-directory","scenario");
x.t("activated","action");
x.t("activated","nodes");
x.t("6.1","interact");
x.t("chains","filter");
x.t("chains","handle");
x.t("chains","input");
x.t("chains","chain-name");
x.t("chains","erase");
x.t("configured","table-desc");
x.t("configured","therefore");
x.t("supplemental","information");
x.t("commands","table");
x.t("commands","firewall");
x.t("commands","specified");
x.t("commands","node");
x.t("commands","executed");
x.t("commands","defined");
x.t("supported","firewall");
x.t("equivalent","firewall");
x.t("human-in-the-loop","(hitl)");
x.t("syntax","table");
x.t("syntax","action");
x.t("syntax","command");
x.t("syntax","identical");
x.t("syntax","predicate");
x.t("syntax","specifying");
x.t("--dport","port");
x.t("next","rule");
x.t("allowed","pass");
x.t("allowed","denied");
x.t("packet-based","stateless");
x.t("accept","new-chain-name");
x.t("accept","accept");
x.t("accept","packet");
x.t("jump","custom");
x.t("jump","immediately");
x.t("first","rule");
x.t("first","fragment");
x.t("written","comma-separated");
x.t("processing","current");
x.t("gui","parameter");
x.t("gui","section");
x.t("gui","configuration");
x.t("gui","following");
x.t("number","packets");
x.t("number","packet");
x.t("parent","chain");
x.t("--destination-port","port");
x.t("2013","scalable");
x.t("software","hardware");
x.t("software","firewall");
x.t("software","found");
x.t("software","process");
x.t("cannot","configured");
x.t("cannot","used");
x.t("different","classes");
x.t("different","predefined");
x.t("user-defined","chain");
x.t("specifies","action");
x.t("specifies","chain");
x.t("specifies","rule");
x.t("specifies","condition");
x.t("against","specified");
x.t("--source","address");
x.t("unset","command");
x.t("instructs","firewall");
x.t("editor","cyber");
x.t("/scenarios/cyber/firewall","table");
x.t("represents","canonical");
x.t("private","dmz");
x.t("receive","packets");
x.t("stateless","software");
x.t("stateless","retain");
x.t("stateless","implementation");
x.t("index","equal");
x.t("index","--out-interface");
x.t("index","firewall");
x.t("index","outgoing");
x.t("index","index");
x.t("index","match");
x.t("index","host");
x.t("index","integer");
x.t("index","note");
x.t("index","subnet");
x.t("index","--in-interface");
x.t("replace","rules");
x.t("scenario","description");
x.t("scenario","execution");
x.t("scenario","property");
x.t("scenario","recommended");
x.t("scenario","located");
x.t("scenario","least");
x.t("scenario","configuration");
x.t("characteristics","packet");
x.t("table-desc","table");
x.t("table-desc","chain-desc");
x.t("--new-chain","new-chain-name");
x.t("--protocol","protocol");
x.t("instead","parent");
x.t("firewalls","firewall");
x.t("firewalls","determines");
x.t("firewalls","software");
x.t("firewalls","3.2.2");
x.t("inspects","packets");
x.t("inspects","outgoing");
x.t("inspects","packet");
x.t("inspects","incoming");
x.t("enumerates","firewall");
x.t("filename","extension");
x.t("format","firewall");
x.t("format","file");
x.t("identical","iptables");
x.t("match","protocols");
x.t("match","source");
x.t("match","packets");
x.t("match","tcp");
x.t("match","rule");
x.t("match","destination");
x.t("match","second");
x.t("match","ports");
x.t("match","first");
x.t("match","protocol");
x.t("arrive","interface");
x.t("section","3.2.4.1");
x.t("section","6.1");
x.t("section","3.2.4");
x.t("directory","exata_home");
x.t("internal","network");
x.t("omitted","example");
x.t("omitted","features");
x.t("node","blacklisted");
x.t("node","network");
x.t("node","specified");
x.t("node","rule");
x.t("node","node");
x.t("node","3.2.9");
x.t("syn","flag");
x.t("syn","indicates");
x.t("syn","match");
x.t("syn","ack");
x.t("syn","--in-interface");
x.t("scope","gui");
x.t("retain","state");
x.t("end","range");
x.t("end","simulation");
x.t("executed","during");
x.t("scenarios","included");
x.t("scenarios","firewall");
x.t("scenarios","located");
x.t("return","back");
x.t("return","continue");
x.t("return","parent");
x.t("unfragmented","packets");
x.t("statistic","description");
x.t("located","table");
x.t("located","directory");
x.t("restrict","access");
x.t("header","indicated");
x.t("header","source");
x.t("header","tcp");
x.t("header","address");
x.t("header","ack");
x.t("header","port");
x.t("header","protocol");
x.t("header","3.2.5");
x.t("header","belong");
x.t("previous","state");
x.t("least","rule");
x.t("successfully","received");
x.t("100","inclusive");
x.t("lower","upper");
x.t("option","return");
x.t("assumptions","limitations");
x.t("assumptions","3.2.2.1");
x.t("e.g","80:100");
x.t("e.g","source");
x.t("e.g","10.10.0.0/255.255.255.0");
x.t("e.g","10.10.0.1");
x.t("e.g","10.10.0.0/24");
x.t("e.g","--sport");
x.t("greater","equal");
x.t("rules","table");
x.t("rules","chain");
x.t("rules","command");
x.t("rules","cannot");
x.t("rules","nodes");
x.t("rules","described");
x.t("rules","checked");
x.t("less","equal");
x.t("consider","following");
x.t("project","http://www.netfilter.org");
x.t("specifically","model");
x.t("configuration","file");
x.t("configuration","configure");
x.t("configuration","(.config)");
x.t("configuration","specify");
x.t("include","following");
x.t("fragment","unfragmented");
x.t("value","table-name");
x.t("value","e.g");
x.t("value","following");
x.t("chain-name","--goto");
x.t("chain-name","name");
x.t("chain-name","continue");
x.t("chain-name","jump");
x.t("chain-name","policy");
x.t("chain-name","conditions");
x.t("predicate","cannot");
x.t("predicate","clauses");
x.t("predicate","clause");
x.t("implementation","implies");
x.t("--jump","example");
x.t("--jump","--goto");
x.t("--jump","action");
x.t("--jump","option");
x.t("figure","3-2");
x.t("3-2","setting");
x.t("(hitl)","interface");
x.t("several","sample");
x.t("computer","host");
x.t("process","inspects");
x.t("generated","delivered");
x.t("generated","applications");
x.t("condition","satisfied");
x.t("condition","predicate");
x.t("condition","(s)");
x.t("transmitted","interface");
x.t("models","filter");
x.t("models","3.2");
x.t("systems","[1]");
x.t("unrelated","firewalls");
x.t("clauses","table");
x.t("clauses","firewall");
x.t("clauses","command");
x.t("clauses","specified");
x.t("clauses","predicate");
x.t("clauses","described");
x.t("3-4","describes");
x.t("3-4","table");
x.t("3-4","note");
x.t("valid","value");
x.t("(s)","true");
x.t("(s)","packet");
x.t("notation","e.g");
x.t("distribution","includes");
x.t("output","chain");
x.t("output","forward");
x.t("output","statistics");
x.t("drop","packets");
x.t("drop","command");
x.t("drop","accept");
x.t("drop","drop");
x.t("drop","packet");
x.t("nodes","scenario");
x.t("specifying","firewall");
x.t("3-5","describes");
x.t("3-5","chain");
x.t("3-5","note");
x.t("--source-port","port");
x.t("3-10","lists");
x.t("3-10","firewall");
x.t("3.2.1","description");
x.t("host","passed");
x.t("host","rather");
x.t("host","action");
x.t("host","firewall");
x.t("host","packets");
x.t("host","forward");
x.t("host","address");
x.t("host","bit");
x.t("host","system");
x.t("information","none");
x.t("configure","firewall");
x.t("configure","behavior");
x.t("optional","firewall");
x.t("optional","valid");
x.t("3-6","describes");
x.t("3-6","action");
x.t("3-6","predicate");
x.t(":80","match");
x.t("interact","firewall");
x.t("3.2.2","features");
x.t("defined","firewall");
x.t("defined","chains");
x.t("defined","configure");
x.t("received","host");
x.t("3-7","describes");
x.t("3-7","actions");
x.t("3-7","note");
x.t("bit","notation");
x.t("ack","flag");
x.t("ack","fin");
x.t("ack","syn");
x.t("policy","default");
x.t("policy","chain");
x.t("policy","--policy");
x.t("policy","drop");
x.t("policy","append");
x.t("predicates","evaluate");
x.t("predicates","mac");
x.t("predicates","true");
x.t("predicates","10.10.0.0/24");
x.t("3.2.3","supplemental");
x.t("application","layer");
x.t("3-8","command");
x.t("3-8","figure");
x.t("runtime","execute");
x.t("runtime","commands");
x.t("port","equal");
x.t("port","field");
x.t("port","tcp");
x.t("port","--tcp-flags");
x.t("port","destination");
x.t("port","--dport");
x.t("port","--destination-port");
x.t("port","match");
x.t("port","--source-port");
x.t("port","following");
x.t("goto","custom");
x.t("3.2.4","command");
x.t("3.2.4","3.2.7");
x.t("described","table");
x.t("described","section");
x.t("rst","urg");
x.t("rst","flags");
x.t("rst","syn");
x.t("called","current");
x.t("called","via");
x.t("above","rule");
x.t("global","firewall-config-file");
x.t("3-9","lists");
x.t("3-9","firewall");
x.t("protocol","icmp");
x.t("protocol","source");
x.t("protocol","field");
x.t("protocol","udp");
x.t("protocol","tcp");
x.t("protocol","address");
x.t("protocol","stack");
x.t("protocol","--protocol");
x.t("protocol","match");
x.t("protocol","integer");
x.t("protocol","packet");
x.t("protocol","clause");
x.t("classes","traffic");
x.t("two","parts");
x.t("two","components");
x.t("two","actions");
x.t("predefined","previously");
x.t("predefined","chains");
x.t("note","table");
x.t("note","action");
x.t("note","chain");
x.t("note","predicate");
x.t("integer","command");
x.t("integer","value");
x.t("3.2.5","gui");
x.t("based","iptables");
x.t("based","access");
x.t("based","systems");
x.t("nat","mangle");
x.t("applications","host");
x.t("psh","none");
x.t("3.2.6","runtime");
x.t("inspected","forward");
x.t("inspected","input");
x.t("inspected","number");
x.t("inspected","output");
x.t("packet","action");
x.t("packet","satisfy");
x.t("packet","summarize");
x.t("packet","command");
x.t("packet","filter");
x.t("packet","processed");
x.t("packet","filtering");
x.t("packet","further");
x.t("packet","determine");
x.t("packet","matched");
x.t("packet","allow");
x.t("packet","syntax");
x.t("packet","allowed");
x.t("packet","accept");
x.t("packet","jump");
x.t("packet","header");
x.t("packet","e.g");
x.t("packet","chain-name");
x.t("packet","condition");
x.t("packet","drop");
x.t("packet","inspected");
x.t("packet","arrived");
x.t("packet","denied");
x.t("incoming","interface");
x.t("incoming","packets");
x.t("relies","previous");
x.t(".firewall","3.2.4.1");
x.t("immediately","first");
x.t("3.2.7","statistics");
x.t("canonical","enterprise");
x.t("model","firewall");
x.t("model","exata");
x.t("model","network");
x.t("model","3.2");
x.t("model","activated");
x.t("model","gui");
x.t("model","stateless");
x.t("model","scenarios");
x.t("model","include");
x.t("model","3.2.1");
x.t("model","runtime");
x.t("model","used");
x.t("model","statistics");
x.t("system","used");
x.t("used","implement");
x.t("used","firewall");
x.t("used","input");
x.t("used","restrict");
x.t("used","output");
x.t("used","packet");
x.t("following","parameter");
x.t("following","firewall");
x.t("following","command");
x.t("following","strings");
x.t("following","accept");
x.t("following","scenario");
x.t("following","host");
x.t("following","integer");
x.t("clause","firewall");
x.t("clause","specified");
x.t("clause","match");
x.t("subnet","10.10.0.0/24");
x.t("subnet","address");
x.t("subnet","mask");
x.t("subnet","10.10.0.0/24t");
x.t("either","lower");
x.t("hitl","interface");
x.t("simulation","table");
x.t("3.2.8","scenarios");
x.t("dropped","number");
x.t("dropped","firewalls");
x.t("setting","firewall");
x.t("setting","parameters");
x.t("dmz-network","represents");
x.t("3.2.9","references");
x.t("pass","network");
x.t("pass","firewalls");
x.t("tracking","3.2.3");
x.t("per","line");
x.t("--in-interface","indicates");
x.t("--in-interface","index");
x.t("--in-interface","drop");
x.t("statistics","table");
x.t("statistics","statistic");
x.t("statistics","output");
x.t("statistics","(.stat)");
x.t("(.stat)","file");
x.t("append","firewall");
x.t("append","rule");
x.t("append","conditions");
x.t("erase","replace");
x.t("therefore","relies");
x.t("behavior","firewall");
x.t("performed","packet");
x.t("denied","access");
x.t("insert","rule");
x.t("(.config)","file");
x.t("10.10.0.0/24t","--tcp-flags");
x.t("arrived","interface");
x.t("conditions","properties");
x.t("conditions","action");
x.t("conditions","zero");
x.t("conditions","specifies");
x.t("conditions","two");
x.t("conditions","conditions");
x.t("--sport","match");
x.t("--sport",":80");
x.t("--sport","port");
x.t("multihop","wireless");
x.t("specify","firewall");
x.t("comma-separated","list");
x.t("checked","packet");
x.t("matching","rules");
x.t("belong","subnet");
x.t("dmz","networks");
}

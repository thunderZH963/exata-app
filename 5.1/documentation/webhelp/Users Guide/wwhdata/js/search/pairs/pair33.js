function FileData_Pairs(x)
{
x.t("fault","symbols");
x.t("interfaces","fail");
x.t("interfaces","node");
x.t("library","details");
x.t("human","loop");
x.t("internet","gateway");
x.t("internet","routed");
x.t("2008","2013");
x.t("architect\u2019s","visualize");
x.t("scalable","network");
x.t("visualize","mode");
x.t("static","dynamic");
x.t("refer","faults");
x.t("sending","deactivate");
x.t("green","triangle");
x.t("5.4","brown");
x.t("program","external");
x.t("mode","6.2");
x.t("mode","gui");
x.t("mode","following");
x.t("interface","deactivated/activated");
x.t("interface","section");
x.t("interface","node");
x.t("interface","faults");
x.t("interface","point-to-point");
x.t("5.6","size");
x.t("exata","architect");
x.t("exata","nodes");
x.t("external","program");
x.t("external","interface");
x.t("external","node");
x.t("external","application");
x.t("packets","section");
x.t("i.e","traffic");
x.t("i.e","node");
x.t("i.e","application");
x.t("form","operational");
x.t("circle","diagonal");
x.t("link","refer");
x.t("details","2008");
x.t("details","node");
x.t("loop","interface");
x.t("loop","configuration");
x.t("4.2.4.2","details");
x.t("command","human");
x.t("size","triangles");
x.t("indicates","interfaces");
x.t("indicates","internet");
x.t("indicates","external");
x.t("indicates","least");
x.t("indicates","packet");
x.t("file","section");
x.t("deactivated/activated","external");
x.t("network","technologies");
x.t("traffic","exata");
x.t("symbols","fault");
x.t("symbols","exata");
x.t("symbols","6.2");
x.t("symbols","scenario");
x.t("symbols","appear");
x.t("gateway","node");
x.t("changed","section");
x.t("4.2.11.2","sending");
x.t("4.2.11.2","node");
x.t("subsequently","activated");
x.t("deactivated","interfaces");
x.t("deactivated","including");
x.t("triangle","indicates");
x.t("repaired","node");
x.t("failed","interface");
x.t("failed","orange");
x.t("activated","interfaces");
x.t("selected","sniffing");
x.t("6.2","canvas");
x.t("configured","node");
x.t("next","nodes");
x.t("red","circle");
x.t("mapped","operational");
x.t("fail","node");
x.t("gui","nodes");
x.t("2013","scalable");
x.t("may","occur");
x.t("canvas","symbols");
x.t("scenario","run");
x.t("ways","static");
x.t("brown","triangle");
x.t("section","5.4");
x.t("section","5.6");
x.t("section","4.2.4.2");
x.t("section","4.2.11.2");
x.t("section","5.2.1.1.1");
x.t("section","5.2.1.1.2");
x.t("section","developer");
x.t("node","interface");
x.t("node","i.e");
x.t("node","form");
x.t("node","subsequently");
x.t("node","deactivated");
x.t("node","repaired");
x.t("node","failed");
x.t("node","selected");
x.t("node","mapped");
x.t("node","section");
x.t("node","highlights");
x.t("node","following");
x.t("end","internet");
x.t("appear","dynamically");
x.t("least","interfaces");
x.t("5.2.1.1.1","green");
x.t("architect","visualize");
x.t("5.2.1.1.2","orange");
x.t("routed","node");
x.t("configuration","file");
x.t("hosts","end");
x.t("developer","model");
x.t("figure","6-2");
x.t("view","changed");
x.t("orange","circle");
x.t("orange","triangle");
x.t("purple","triangle");
x.t("nodes","interface");
x.t("nodes","highlighted");
x.t("nodes","operational");
x.t("dynamic","faults");
x.t("host","section");
x.t("faults","configured");
x.t("faults","red");
x.t("faults","may");
x.t("faults","section");
x.t("diagonal","indicates");
x.t("highlights","scenario");
x.t("colored","triangles");
x.t("application","node");
x.t("application","run");
x.t("sniffing","packets");
x.t("sniffing","node");
x.t("triangles","figure");
x.t("triangles","view");
x.t("emulation","mode");
x.t("packet","sniffing");
x.t("run","architect\u2019s");
x.t("run","node");
x.t("run","emulation");
x.t("following","symbols");
x.t("following","ways");
x.t("model","library");
x.t("6-2","purple");
x.t("occur","node");
x.t("point-to-point","link");
x.t("including","deactivate");
x.t("highlighted","colored");
x.t("deactivate","command");
x.t("operational","hosts");
x.t("operational","host");
x.t("dynamically","next");
}

function FileData_Pairs(x)
{
x.t("supports","ieee");
x.t("supports","sniffing");
x.t("debugging","network");
x.t("debugging","client/server");
x.t("readable","format");
x.t("fault","analysis");
x.t("ieee","802.11");
x.t("example","packets");
x.t("protocols","default");
x.t("protocols","used");
x.t("protocols","including");
x.t("human","readable");
x.t("icmp","icmpv6");
x.t("available","emulation");
x.t("provide","exata");
x.t("capturing","packets");
x.t("diagnose","network");
x.t("converted","familiar");
x.t("version","system-arch");
x.t("2008","2013");
x.t("within","emulated");
x.t("within","exata");
x.t("needs","installed");
x.t("needs","uninstalled");
x.t("shown","figure");
x.t("files","present");
x.t("files","emulation");
x.t("scalable","network");
x.t("5-55","shows");
x.t("5-55","exata");
x.t("installed","type");
x.t("installed","open");
x.t("installed","during");
x.t("installed","performing");
x.t("installed","along");
x.t("refer","exata");
x.t("ensures","packets");
x.t("layer","protocols");
x.t("layer","tcp");
x.t("layer","ipv4");
x.t("enetv.inf","root\\enetv");
x.t("5-56","exata");
x.t("5-56","figure");
x.t("source","code");
x.t("source","header");
x.t("launching","exata");
x.t("microsoft","network");
x.t("arguments","entered");
x.t("5-57","exata");
x.t("5-57","figure");
x.t("converting","data");
x.t("enabled","exata");
x.t("ethernet","mac");
x.t("5-58","shows");
x.t("5-58","exata");
x.t("shows","exata");
x.t("shows","snt");
x.t("line","interface");
x.t("line","32-bit");
x.t("line","verify");
x.t("5-59","show");
x.t("5-59","captured");
x.t("5.6","using");
x.t("emulated","network");
x.t("interface","exata");
x.t("interface","card");
x.t("interface","capture");
x.t("interface","perform");
x.t("interface","parameters");
x.t("interface","selection");
x.t("interface","feature");
x.t("interface","select");
x.t("interface","gui");
x.t("interface","windows");
x.t("interface","core");
x.t("interface","linux");
x.t("interface","correctly");
x.t("interface","packet");
x.t("provided","exata");
x.t("physical","network");
x.t("displays","packets");
x.t("os-version","system-arch");
x.t("os-version","operating");
x.t("center","change");
x.t("kernel","source");
x.t("kernel","dpkg");
x.t("kernel","rpm");
x.t("administrator","install");
x.t("mode","launching");
x.t("ethereal","observer");
x.t("open","networks");
x.t("open","command");
x.t("open","wireshark");
x.t("open","terminal");
x.t("change","directory");
x.t("change","adapter");
x.t("type","dpkg");
x.t("type","following");
x.t("type","rpm");
x.t("batch","file");
x.t("exata","supports");
x.t("exata","interface");
x.t("exata","automatically");
x.t("exata","command");
x.t("exata","network");
x.t("exata","virtual");
x.t("exata","device");
x.t("exata","gui");
x.t("exata","configures");
x.t("exata","process");
x.t("exata","capable");
x.t("exata","protocol");
x.t("exata","packet");
x.t("exata","installation");
x.t("exata","exata_dot11");
x.t("packets","provide");
x.t("packets","exata");
x.t("packets","encapsulated");
x.t("packets","start");
x.t("packets","written");
x.t("packets","node");
x.t("packets","displayed");
x.t("packets","transmitted");
x.t("packets","captured");
x.t("packets","correctly");
x.t("packets","using");
x.t("verification","monitoring");
x.t("discover","network");
x.t("discover","problems");
x.t("install-enetv.bat","directory");
x.t("time","exata");
x.t("party","software");
x.t("party","packet");
x.t("i.e","mac");
x.t("bridge","third");
x.t("mac","layer");
x.t("mac","headers");
x.t("mac","header");
x.t("mac","protocol");
x.t("mac","note");
x.t("default","enetv");
x.t("encapsulated","ethernet");
x.t("32-bit","systems");
x.t("networks","connections");
x.t("listed","shown");
x.t("automatically","attempts");
x.t("advanced","capabilities");
x.t("card","treated");
x.t("card","addition");
x.t("card","conform");
x.t("card","tapped");
x.t("card","emulation");
x.t("card","(enetv)");
x.t("contents","headers");
x.t("contents","wireshark");
x.t("servers","installing");
x.t("details","enetv");
x.t("details","configure");
x.t("start","exata");
x.t("start","control");
x.t("start","packet");
x.t("command","arguments");
x.t("command","line");
x.t("command","window");
x.t("capture","packets");
x.t("capture","parse");
x.t("capture","display");
x.t("capture","options");
x.t("capture","show");
x.t("standards","packet");
x.t("http","mac");
x.t("file","install-enetv.bat");
x.t("file","uninstall-enetv.bat");
x.t("uinstall","enetv");
x.t("able","capture");
x.t("treated","packet");
x.t("udp","network");
x.t("installing","enetv");
x.t("during","main");
x.t("/interfaces/pas/virtual_windows/","os-version");
x.t("network","debugging");
x.t("network","within");
x.t("network","layer");
x.t("network","technologies");
x.t("network","packets");
x.t("network","card");
x.t("network","traffic");
x.t("network","virtual");
x.t("network","problems");
x.t("network","sharing");
x.t("network","device");
x.t("network","usage");
x.t("network","lack");
x.t("network","monitor");
x.t("network","protocol");
x.t("network","packet");
x.t("network","statistics");
x.t("network","bottlenecks");
x.t("guide","details");
x.t("remove","enetv.inf");
x.t("kernel-headers","systems");
x.t("kernel-headers","above");
x.t("traffic","within");
x.t("traffic","generated");
x.t("traffic","reverse");
x.t("parse","packets");
x.t("tcp","udp");
x.t("ubuntu","systems");
x.t("pressing","play");
x.t("observer","microsoft");
x.t("observer","packet");
x.t("analyze","network");
x.t("high","fidelity");
x.t("\\interfaces\\pas\\virtual_windows\\devcon.exe","remove");
x.t("\\interfaces\\pas\\virtual_windows\\devcon.exe","install");
x.t("test","exata");
x.t("familiar","ethernet");
x.t("settings","right\u2011click");
x.t("snt","exata");
x.t("performance","analysis");
x.t("virtual","interface");
x.t("virtual","card");
x.t("virtual","network");
x.t("virtual","driver");
x.t("ipv4","ipv6");
x.t("custom","non-standard");
x.t("entered","line");
x.t("debian","ubuntu");
x.t("perform","following");
x.t("filtering","suspect");
x.t("window","change");
x.t("window","start");
x.t("window","click");
x.t("window","changing");
x.t("window","following");
x.t("alternatively","install");
x.t("alternatively","unnstall");
x.t("parameters","command");
x.t("implementations","converting");
x.t("ipv6","icmp");
x.t("stack","ensures");
x.t("attempts","compile");
x.t("triangle","node");
x.t("selection","wireshark");
x.t("third","party");
x.t("exata_home","/interfaces/pas/virtual_windows/");
x.t("exata_home","\\interfaces\\pas\\virtual_windows\\devcon.exe");
x.t("exata_home","/interfaces/pas/virtual_windows");
x.t("exata_home","\\interfaces\\pas\\virtual_windows\\devcon_amd64.exe");
x.t("problems","advanced");
x.t("problems","network");
x.t("problems","protocol");
x.t("addition","packet");
x.t("sharing","center");
x.t("device","listed");
x.t("device","capture");
x.t("device","snt");
x.t("device","uninstalling");
x.t("input","configuration");
x.t("gathering","reporting");
x.t("icmpv6","routing");
x.t("present","verify");
x.t("selected","node");
x.t("selected","sniffing");
x.t("begin","capturing");
x.t("frames","ieee");
x.t("supported","linux");
x.t("separately","installed");
x.t("uninstall-enetv.bat","directory");
x.t("commands","fail");
x.t("display","packets");
x.t("configured","capture");
x.t("acts","bridge");
x.t("install","enetv.inf");
x.t("install","kernel");
x.t("install","enetv");
x.t("wireshark","2008");
x.t("wireshark","start");
x.t("wireshark","observer");
x.t("wireshark","figure");
x.t("wireshark","formerly");
x.t("feature","enabled");
x.t("feature","provided");
x.t("headers","i.e");
x.t("headers","custom");
x.t("headers","correctly");
x.t("system-arch","os-version");
x.t("system-arch","architecture");
x.t("fail","consult");
x.t("select","node");
x.t("options","windows");
x.t("button","gui");
x.t("analyzers","used");
x.t("client/server","communications");
x.t("communications","debugging");
x.t("written","network");
x.t("control","panel");
x.t("control","management");
x.t("right\u2011click","window");
x.t("gui","mode");
x.t("gui","running");
x.t("gui","specific");
x.t("gui","displaying");
x.t("reporting","network");
x.t("reporting","packet");
x.t("fidelity","exata");
x.t("enetv","displays");
x.t("enetv","exata");
x.t("enetv","windows");
x.t("enetv","linux");
x.t("enetv","driver");
x.t("dpkg","kernel");
x.t("dpkg","kernel-headers");
x.t("asks","network");
x.t("2013","scalable");
x.t("software","5.6");
x.t("software","physical");
x.t("software","exata");
x.t("software","able");
x.t("software","begin");
x.t("software","wireshark");
x.t("software","asks");
x.t("software","using");
x.t("receive","packet");
x.t("ospf","applications");
x.t("canvas","brown");
x.t("brown","triangle");
x.t("analyzing","network");
x.t("format","fault");
x.t("format","displayed");
x.t("internal","traffic");
x.t("transport","layer");
x.t("directory","exata_home");
x.t("compile","load");
x.t("verify","available");
x.t("verify","packet");
x.t("section","4.3.3");
x.t("node","open");
x.t("node","selected");
x.t("node","configured");
x.t("node","figure");
x.t("node","(s)");
x.t("node","highlighted");
x.t("end","emulated");
x.t("end","virtual");
x.t("steps","open");
x.t("steps","enable");
x.t("executed","order");
x.t("code","header");
x.t("enable","packet");
x.t("consult","system");
x.t("header","files");
x.t("header","format");
x.t("performing","following");
x.t("operating","system");
x.t("successfully","installed");
x.t("ftp","http");
x.t("click","view");
x.t("displayed","wireshark");
x.t("displayed","enetv");
x.t("displayed","figure");
x.t("windows","exata");
x.t("windows","uinstall");
x.t("windows","wireshark");
x.t("windows","enetv");
x.t("architecture","system");
x.t("changing","directory");
x.t("configuration","toolbar");
x.t("usage","gathering");
x.t("core","feature");
x.t("tools","capture");
x.t("tools","end");
x.t("configures","virtual");
x.t("hosts","end");
x.t("main","exata");
x.t("main","installation");
x.t("running","selected");
x.t("figure","5-55");
x.t("figure","5-56");
x.t("figure","5-57");
x.t("figure","5-58");
x.t("figure","5-59");
x.t("root\\enetv","64-bit");
x.t("root\\enetv","note");
x.t("64-bit","systems");
x.t("specific","node");
x.t("lack","connectivity");
x.t("generated","operational");
x.t("connections","window");
x.t("view","tiles");
x.t("process","pressing");
x.t("process","executed");
x.t("transmitted","received");
x.t("conform","standards");
x.t("capable","displaying");
x.t("olsr","ospf");
x.t("linux","kernel");
x.t("linux","exata");
x.t("linux","input");
x.t("linux","linux");
x.t("linux","emulation");
x.t("systems","type");
x.t("systems","exata_home");
x.t("panel","network");
x.t("uninstalling","enetv");
x.t("(s)","packets");
x.t("show","example");
x.t("show","traffic");
x.t("along","main");
x.t("tiles","exata");
x.t("capabilities","statistics");
x.t("monitoring","network");
x.t("data","human");
x.t("data","control");
x.t("tapped","receive");
x.t("configure","enetv");
x.t("configure","packet");
x.t("tool","locate");
x.t("engineering","protocols");
x.t("toolbar","software");
x.t("toolbar","figure");
x.t("received","packets");
x.t("sniffing","ieee");
x.t("sniffing","emulated");
x.t("sniffing","interface");
x.t("sniffing","packets");
x.t("sniffing","software");
x.t("sniffing","node");
x.t("sniffing","tools");
x.t("sniffing","tool");
x.t("sniffing","analysis");
x.t("formerly","ethereal");
x.t("monitor","analyze");
x.t("displaying","data");
x.t("displaying","packet");
x.t("routing","protocols");
x.t("captured","section");
x.t("captured","packet");
x.t("locate","toolbar");
x.t("above","commands");
x.t("emulation","5.6");
x.t("emulation","servers");
x.t("emulation","server");
x.t("protocol","diagnose");
x.t("protocol","converted");
x.t("protocol","verification");
x.t("protocol","implementations");
x.t("protocol","stack");
x.t("protocol","supported");
x.t("protocol","capable");
x.t("protocol","protocol");
x.t("802.11","mac");
x.t("note","alternatively");
x.t("note","packet");
x.t("suspect","content");
x.t("connectivity","performance");
x.t("correctly","capture");
x.t("correctly","transport");
x.t("correctly","figure");
x.t("applications","including");
x.t("uninstalled","type");
x.t("packet","contents");
x.t("packet","analyzers");
x.t("packet","sniffing");
x.t("packet","protocol");
x.t("packet","packet");
x.t("packet","sniffer");
x.t("packet","streams");
x.t("reverse","engineering");
x.t("order","exata");
x.t("used","network");
x.t("used","analyzing");
x.t("non-standard","mac");
x.t("management","frames");
x.t("following","command");
x.t("following","debian");
x.t("following","steps");
x.t("system","version");
x.t("system","administrator");
x.t("system","enetv");
x.t("sniffer","interface");
x.t("using","batch");
x.t("using","emulation");
x.t("using","packet");
x.t("using","popular");
x.t("installation","refer");
x.t("installation","guide");
x.t("installation","separately");
x.t("/interfaces/pas/virtual_windows","installing");
x.t("/interfaces/pas/virtual_windows","test");
x.t("play","button");
x.t("statistics","filtering");
x.t("statistics","reporting");
x.t("(enetv)","acts");
x.t("analysis","discover");
x.t("analysis","software");
x.t("analysis","tools");
x.t("forwards","internal");
x.t("driver","needs");
x.t("driver","installed");
x.t("driver","time");
x.t("driver","successfully");
x.t("driver","performing");
x.t("driver","using");
x.t("load","configure");
x.t("terminal","window");
x.t("including","ftp");
x.t("including","olsr");
x.t("adapter","settings");
x.t("unnstall","enetv");
x.t("highlighted","canvas");
x.t("bottlenecks","figure");
x.t("operational","hosts");
x.t("4.3.3","details");
x.t("popular","third");
x.t("content","network");
x.t("server","open");
x.t("server","using");
x.t("server","forwards");
x.t("streams","high");
x.t("\\interfaces\\pas\\virtual_windows\\devcon_amd64.exe","remove");
x.t("\\interfaces\\pas\\virtual_windows\\devcon_amd64.exe","install");
x.t("rpm","kernel");
x.t("rpm","kernel-headers");
x.t("exata_dot11","linux");
}

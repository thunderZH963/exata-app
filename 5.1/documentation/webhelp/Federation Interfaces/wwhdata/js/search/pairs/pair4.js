function FileData_Pairs(x)
{
x.t("example","destroyed");
x.t("example","simulating");
x.t("example","entities");
x.t("example","networks");
x.t("example","irregular");
x.t("example","fom");
x.t("example","following");
x.t("example","radios");
x.t("altitude","values");
x.t("altitude","entity");
x.t("altitude","attributes");
x.t("real-time","second");
x.t("real-time","platform");
x.t("clock","time");
x.t("clock","driven");
x.t("supports","following");
x.t("included","exata");
x.t("extensions","interface");
x.t("uniquely","identifies");
x.t("interfaces","vr-link");
x.t("debugging","global");
x.t("14s","1.1");
x.t("tells","uav");
x.t("library","details");
x.t("library","functions");
x.t("library","rtis");
x.t("publishing","federates");
x.t("stepped","clock");
x.t("2.2.1","describes");
x.t("2.2.1","general");
x.t("appendix","describes");
x.t("appendix","table");
x.t("appendix","details");
x.t("below","register");
x.t("below","steps");
x.t("below","configure");
x.t("provide","communication");
x.t("parameter","irrespective");
x.t("parameter","vrlink");
x.t("parameter","command");
x.t("parameter","metric");
x.t("parameter","scope");
x.t("parameter","enable");
x.t("parameter","value");
x.t("parameter","applicable");
x.t("parameter","values");
x.t("seven","fields");
x.t("axes","swapped");
x.t("receiver","specified");
x.t("properties","editor");
x.t("indicated","original");
x.t("irrespective","client");
x.t("http://www.mak.com","vr-forces");
x.t("available","computer");
x.t("globally","known");
x.t("permanent","nature");
x.t("defines","number");
x.t("defines","groups");
x.t("2.2.2","describes");
x.t("2.2.2","need");
x.t("2.2.2","creating");
x.t("2.2.2","demo");
x.t("2.2.2","move");
x.t("version","exata");
x.t("version","rpr-fom");
x.t("version","respectively");
x.t("version","values");
x.t("version","global");
x.t("255.255.255.255","default");
x.t("255.255.255.255","used");
x.t("relayed","communications");
x.t("moves","continues");
x.t("moves","entity");
x.t("moves","towards");
x.t("receives","asrs");
x.t("receives","entity");
x.t("simultaneously","interact");
x.t("2008","2013");
x.t("implement","interactions");
x.t("federates","announce");
x.t("federates","whereas");
x.t("federates","exata");
x.t("federates","subscribe");
x.t("federates","directly");
x.t("federates","vrlink-xyz-epsilon");
x.t("announce","ability");
x.t("dlc","using");
x.t("2.2.3","describes");
x.t("2.2.3","sequence");
x.t("full","constructive");
x.t("simulators","federation");
x.t("simulators","joint");
x.t("vrlink-entities-file-path","required");
x.t("vrlink-entities-file-path","radios");
x.t("vrlink-networks-file-path","required");
x.t("vrlink-networks-file-path","enable");
x.t("vrlink-hla-dynamic-statistics-send-metric-definitions","2.2.3");
x.t("vrlink-hla-dynamic-statistics-send-metric-definitions","optional");
x.t("neutral","nationality");
x.t("files","exata");
x.t("files","scenario");
x.t("files","section");
x.t("files","located");
x.t("modeling","section");
x.t("wish","wait");
x.t("engage","enemy");
x.t("needs","done");
x.t("scalable","network");
x.t("create","exata");
x.t("create","objects");
x.t("create","scenarios");
x.t("create","simulation");
x.t("rpr","1.0");
x.t("rpr","fom");
x.t("describes","real-time");
x.t("describes","create");
x.t("describes","exata");
x.t("describes","start");
x.t("describes","hla");
x.t("describes","sequence");
x.t("describes","run");
x.t("describes","general");
x.t("2.2.4","describes");
x.t("2.2.4","using");
x.t("effects","modeling");
x.t("effects","external");
x.t("effects","appropriately");
x.t("effects","request");
x.t("effects","requests");
x.t("effects","described");
x.t("refer","exata");
x.t("refer","vr-forces");
x.t("refer","mak");
x.t("refer","documentation");
x.t("table","2-1");
x.t("table","2-2");
x.t("table","2-3");
x.t("description","notifications");
x.t("description","vrlink-debug");
x.t("description","entity");
x.t("tank11","0.0");
x.t("tank11","usa");
x.t("transmitters","dis");
x.t("delivery","status");
x.t("installed","default");
x.t("installed","properly");
x.t("installed","environment");
x.t("rtiexec","doing");
x.t("rtiexec","instance");
x.t("rtiexec","select");
x.t("rtiexec","already");
x.t("rtiexec","finish");
x.t("build","scenarios");
x.t("sending","receiving");
x.t("instance","wish");
x.t("instance","(rtiexec)");
x.t("instance","plane");
x.t("periodically","displays");
x.t("periodically","updates");
x.t("1516","open");
x.t("1516","type");
x.t("1516","entities");
x.t("1516","siso");
x.t("1516","standard");
x.t("1516","configuration");
x.t("events","scenario");
x.t("events","sequence");
x.t("events","typical");
x.t("2.2.5","describes");
x.t("2.2.5","using");
x.t("required","scope");
x.t("required","configure");
x.t("vrlink-application-id","optional");
x.t("lat","long");
x.t("lat","initial");
x.t("tank12","0.0");
x.t("tank12","usa");
x.t("43.533081","6.676147");
x.t("spans","network");
x.t("variables","described");
x.t("rtiassistant","already");
x.t("doing","following");
x.t("20s","velocity");
x.t("roads","avoid");
x.t("executive","process");
x.t("components","provides");
x.t("ability","create");
x.t("distances","sure");
x.t("distances","802.11");
x.t("0.0","0.0");
x.t("0.0","default");
x.t("0.0","225");
x.t("tank13","0.0");
x.t("tank13","usa");
x.t("/scenarios/vrf/unicast/unicast-hla1516.config","open");
x.t("completion","scenario");
x.t("creates","instance");
x.t("nature","interactions");
x.t("current","version");
x.t("enabled","section");
x.t("nodeid","description");
x.t("nodeid","descriptions");
x.t("nodeid","metric");
x.t("descriptions","metric");
x.t("descriptions","global");
x.t("destroyed","hosted");
x.t("destroyed","entity");
x.t("demonstration","section");
x.t("computer-generated","forces");
x.t("program","included");
x.t("program","command-line");
x.t("tips","configuring");
x.t("tips","creating");
x.t("line","parameter");
x.t("line","marking");
x.t("line","entities");
x.t("line","networks");
x.t("line","start");
x.t("line","network");
x.t("line","perform");
x.t("line","window");
x.t("line","equivalent");
x.t("line","node");
x.t("line","configuration");
x.t("line","radios");
x.t("dynamics","sensor");
x.t("dynamics","statistics");
x.t("uses","string");
x.t("uses","scenario");
x.t("field","entitytype");
x.t("field","used");
x.t("coordinate","system");
x.t("n4;45000000;13,14,15,16;255.255.255.255","n5;50000000;17,18,19,20;255.255.255.255");
x.t("n5;50000000;17,18,19,20;255.255.255.255","n6;225000000;21,23;255.255.255.255");
x.t("technologies","vr-forces");
x.t("technologies","mak");
x.t("until","next");
x.t("until","scenario");
x.t("dialog","opens");
x.t("interface","communications");
x.t("interface","vr-link");
x.t("interface","protocol");
x.t("interface","2.2");
x.t("support","services");
x.t("2.2.2.1","command");
x.t("vrlink-protocol","hla-specification");
x.t("physical","entity");
x.t("marking","marking");
x.t("marking","force");
x.t("marking","radio");
x.t("marking","host");
x.t("marking","entity");
x.t("alt","initial");
x.t("alt","entity");
x.t("state","pdu");
x.t("ellipsoid","entity");
x.t("radiotype","attribute");
x.t("mode","global");
x.t("press","pause");
x.t("press","play");
x.t("register","entities");
x.t("register","move");
x.t("register","seconds");
x.t("displays","coordinates");
x.t("displays","commands");
x.t("configurable","programming");
x.t("necessary","entities");
x.t("look","enemy");
x.t("change","velocity");
x.t("change","directory");
x.t("change","z-coordinates");
x.t("type","unit");
x.t("type","radio");
x.t("type","following");
x.t("type","attributes");
x.t("2.2.2.2","gui");
x.t("(asrs)","interactions");
x.t("sample","scenario");
x.t("4.1.1","rtiexec");
x.t("open","exata");
x.t("open","command");
x.t("open","exata_home");
x.t("open","demo");
x.t("open","output");
x.t("basic","unicast");
x.t("times","associated");
x.t("responses","received");
x.t("providing","sensor");
x.t("time","stepped");
x.t("time","checks");
x.t("time","rti");
x.t("time","180");
x.t("time","depends");
x.t("time","specified");
x.t("time","range");
x.t("time","equivalent");
x.t("time","processing");
x.t("time","advance");
x.t("time","note");
x.t("time","management");
x.t("time","load");
x.t("whereas","objects");
x.t("exata","supports");
x.t("exata","appendix");
x.t("exata","provide");
x.t("exata","receives");
x.t("exata","files");
x.t("exata","refer");
x.t("exata","periodically");
x.t("exata","demonstration");
x.t("exata","uses");
x.t("exata","press");
x.t("exata","change");
x.t("exata","operates");
x.t("exata","external");
x.t("exata","exata");
x.t("exata","identify");
x.t("exata","details");
x.t("exata","vr-forces");
x.t("exata","sends");
x.t("exata","simualtion-time");
x.t("exata","addition");
x.t("exata","frequency");
x.t("exata","loads");
x.t("exata","gui");
x.t("exata","whether");
x.t("exata","config-file");
x.t("exata","instead");
x.t("exata","scenario");
x.t("exata","vrlink-tick-interval");
x.t("exata","hla");
x.t("exata","section");
x.t("exata","node");
x.t("exata","expected");
x.t("exata","scenarios");
x.t("exata","client");
x.t("exata","enable");
x.t("exata","4.1");
x.t("exata","configuration");
x.t("exata","represented");
x.t("exata","process");
x.t("exata","distribution");
x.t("exata","nodes");
x.t("exata","described");
x.t("exata","maps");
x.t("exata","testfed");
x.t("exata","run");
x.t("exata","simulation");
x.t("exata","starts");
x.t("exata","model");
x.t("exata","using");
x.t("exata","waits");
x.t("exata","user\u2019s");
x.t("operates","time");
x.t("external","interfaces");
x.t("external","simulator");
x.t("external","communication");
x.t("external","communications");
x.t("external","simulation");
x.t("(itm)","wireless");
x.t("rpr-fom","vrlink-fed-file-path");
x.t("rpr-fom","geocentric");
x.t("0.5","225");
x.t("0.5","unit");
x.t("response","exata");
x.t("response","commands");
x.t("non-programmers","build");
x.t("left","panel");
x.t("however","real-time");
x.t("sections","create");
x.t("identify","itself");
x.t("identify","entity");
x.t("execution","details");
x.t("execution","vr-forces");
x.t("connection","available");
x.t("connection","vrlink-application-id");
x.t("connection","window");
x.t("connection","click");
x.t("connection","federation");
x.t("connection","note");
x.t("n6;225000000;21,23;255.255.255.255","n7;230000000;24,27;0.0.0.0");
x.t("followed","timeout");
x.t("i.e","messages");
x.t("regardless","communications");
x.t("simulating","blinking");
x.t("simulating","scenario");
x.t("listed","below");
x.t("listed","table");
x.t("entities","external");
x.t("entities","file");
x.t("entities","vr-forces");
x.t("entities","damaged");
x.t("entities","scenario");
x.t("entities","dis");
x.t("entities","client");
x.t("entities","position");
x.t("entities","radios");
x.t("default","parameter");
x.t("default","0.5");
x.t("default","indicates");
x.t("default","enables");
x.t("default","destination");
x.t("default","address");
x.t("default","1.0");
x.t("default","200ms");
x.t("default","value");
x.t("default","although");
x.t("default","site");
x.t("default","location");
x.t("default","4000");
x.t("default","verbose");
x.t("default","500ms");
x.t("mac","wireless");
x.t("mac","parameters");
x.t("mac","generic");
x.t("mac","models");
x.t("mac","protocol");
x.t("vrlink-fed-file-path","required");
x.t("vrlink-fed-file-path","site");
x.t("checks","rti");
x.t("networks","file");
x.t("height","above");
x.t("mobility","interval");
x.t("warm-up","phase");
x.t("original","applicationspecificradiosignal");
x.t("back","testfed");
x.t("speed","direction");
x.t("detect","engage");
x.t("assumes","rtiexec");
x.t("assumes","perfect");
x.t("jointly","vr-forces");
x.t("interoperate","software");
x.t("updates","vrlink-entities-file-path");
x.t("updates","entities");
x.t("updates","network");
x.t("updates","interaction");
x.t("updates","interactions");
x.t("updates","position");
x.t("access","plane");
x.t("objects","hla");
x.t("objects","object");
x.t("objects","update");
x.t("details","refer");
x.t("details","configuring");
x.t("details","creating");
x.t("details","(.fed)");
x.t("details","demo");
x.t("details","hla");
x.t("details","itm");
x.t("details","802.11");
x.t("details","verbose");
x.t("details","note");
x.t("details","testfed");
x.t("details","using");
x.t("details","2.2.4.1");
x.t("start","rtiexec");
x.t("start","external");
x.t("start","exata");
x.t("start","rti");
x.t("start","vr-forces");
x.t("start","mak");
x.t("start","programs");
x.t("start","simulation");
x.t("start","forces");
x.t("vrlink","vrlink-protocol");
x.t("vrlink","hla");
x.t("want","run");
x.t("among","federates");
x.t("vrlink-hla-dynamic-statistics","optional");
x.t("vrlink-hla-dynamic-statistics","setting");
x.t("modeled","message");
x.t("modeled","unicast");
x.t("turned","exata");
x.t("contents","notifications");
x.t("waypoints","assigning");
x.t("/scenarios/vrf/commsdemo","2.2.5.2");
x.t("/scenarios/vrf/commsdemo","enter");
x.t("/scenarios/vrf/commsdemo","using");
x.t("engine","simulations");
x.t("usually","simulation");
x.t("rti","library");
x.t("rti","installed");
x.t("rti","instance");
x.t("rti","executive");
x.t("rti","components");
x.t("rti","4.1.1");
x.t("rti","connection");
x.t("rti","start");
x.t("rti","details");
x.t("rti","rti");
x.t("rti","federate");
x.t("rti","sure");
x.t("rti","libraries");
x.t("rti","follows");
x.t("rti","sends");
x.t("rti","attribute");
x.t("rti","demo");
x.t("rti","software");
x.t("rti","reference");
x.t("rti","already");
x.t("rti","order");
x.t("document","2.2.1");
x.t("document","dynamic");
x.t("command","line");
x.t("command","register");
x.t("command","exata");
x.t("command","window");
x.t("command","velocity");
x.t("command","move");
x.t("command","displayed");
x.t("command","output");
x.t("command","testfed");
x.t("command","run");
x.t("vrlink-hla-dynamic-statistis","vrlink-hla-dynamic-statistics-send-metric-definitions");
x.t("vrlink-hla-dynamic-statistis","vrlink-hla-dynamic-statistics-send-nodeid-descriptions");
x.t("vrlink-hla-dynamic-statistis","2.2.2.1.1");
x.t("delta-x","delta-y");
x.t("0.01","0.01");
x.t("0.01","damage");
x.t("0.01","seconds");
x.t("federate","moves");
x.t("federate","creates");
x.t("federate","program");
x.t("federate","support");
x.t("federate","access");
x.t("federate","name");
x.t("federate","follows");
x.t("federate","sends");
x.t("federate","indicate");
x.t("federate","command-line");
x.t("federate","object");
x.t("federate","update");
x.t("blink","sent");
x.t("standards","exata");
x.t("standards","hla");
x.t("simulated","create");
x.t("simulated","refer");
x.t("simulated","federation");
x.t("simulator","2.2.2");
x.t("simulator","create");
x.t("simulator","scenario");
x.t("simulator","section");
x.t("simulator","load");
x.t("simulator","simulate");
x.t("proper","propagation");
x.t("file","defines");
x.t("file","tank11");
x.t("file","entities");
x.t("file","networks");
x.t("file","vrlink");
x.t("file","file");
x.t("file","commsdemo-hla1516.config");
x.t("file","name");
x.t("file","corresponds");
x.t("file","exata_home");
x.t("file","n1;30000000;1,2,3,4;255.255.255.255");
x.t("file","unicast.tesfed");
x.t("file","scenario");
x.t("file","section");
x.t("file","hla");
x.t("file","enable");
x.t("file","correspond");
x.t("file","unicast.testfed");
x.t("file","generated");
x.t("file","commsdemo-hla.config");
x.t("file","described");
x.t("file","global");
x.t("file","joint");
x.t("file","used");
x.t("file","following");
x.t("file","system");
x.t("file","using");
x.t("file","radios");
x.t("list","default");
x.t("list","1.0");
x.t("list","ids");
x.t("list","verbose");
x.t("indicates","whether");
x.t("indicates","transmissions");
x.t("delta-y","delta-z");
x.t("need","configured");
x.t("need","represented");
x.t("initialization","open");
x.t("initialization","time");
x.t("initialization","status");
x.t("initialization","complete");
x.t("status","potential");
x.t("status","messages");
x.t("status","hla");
x.t("appropriately","example");
x.t("50s","quit");
x.t("50s","received");
x.t("continues","until");
x.t("commsdemo","scenario");
x.t("again","following");
x.t("constructive","simulation");
x.t("vrlink-federate-name","rpr");
x.t("vrlink-federate-name","required");
x.t("225","tank12");
x.t("225","tank13");
x.t("225","2.2.2.1.2");
x.t("225","2.2.2.1.3");
x.t("delta-z","relative");
x.t("delta-z","radio");
x.t("complete","warm-up");
x.t("complete","either");
x.t("treated","either");
x.t("during","scenario");
x.t("during","simulation");
x.t("180","seconds");
x.t("menu","select");
x.t("subscribe","object");
x.t("guide","details");
x.t("guide","parameters");
x.t("guide","rtis");
x.t("guide","demo");
x.t("guide","hla");
x.t("guide","note");
x.t("guide","sent");
x.t("network","spans");
x.t("network","field");
x.t("network","technologies");
x.t("network","default");
x.t("network","modeled");
x.t("network","file");
x.t("network","name");
x.t("network","infrastructure");
x.t("network","destination");
x.t("network","node");
x.t("network","centric");
x.t("assume","mak");
x.t("simple","point");
x.t("configuring","hla");
x.t("configuring","scenarios");
x.t("features","account");
x.t("large","distances");
x.t("sure","rtiassistant");
x.t("sure","802.11");
x.t("ea1","ea2");
x.t("ea1","ea7");
x.t("geocentric","coordinate");
x.t("depends","complexity");
x.t("unsuccessful","successful");
x.t("traffic","respond");
x.t("vr-forces","http://www.mak.com");
x.t("vr-forces","computer-generated");
x.t("vr-forces","press");
x.t("vr-forces","exata");
x.t("vr-forces","follows");
x.t("vr-forces","visualization");
x.t("vr-forces","communicate");
x.t("vr-forces","gui");
x.t("vr-forces","scenario");
x.t("vr-forces","section");
x.t("vr-forces","4.0.4");
x.t("vr-forces","simulation");
x.t("vr-forces","using");
x.t("vr-forces","vehicles");
x.t("vr-forces","load");
x.t("vr-forces","user\u2019s");
x.t("commsdemo-hla1516.config","status");
x.t("commsdemo-hla1516.config","click");
x.t("navigate","exata");
x.t("pressing","stop");
x.t("pressing","ctrl");
x.t("high","level");
x.t("test","exata");
x.t("test","federate");
x.t("directly","exata");
x.t("2-1","configuring");
x.t("2-1","configured");
x.t("2-1","hla");
x.t("2.0017","default");
x.t("ea2","ea3");
x.t("specified","exata");
x.t("specified","entities");
x.t("specified","command");
x.t("specified","communications");
x.t("specified","location");
x.t("commas","note");
x.t("substituted","e.g");
x.t("delivered","regardless");
x.t("delivered","destination");
x.t("delivered","successfully");
x.t("potential","recipients");
x.t("processed","signal");
x.t("byte","message");
x.t("2.2.5.1","creating");
x.t("run-time","infrastructure");
x.t("infrastructure","present");
x.t("infrastructure","(rti)");
x.t("libraries","compile");
x.t("creating","exata");
x.t("creating","scenarios");
x.t("creating","routes");
x.t("account","example");
x.t("name","rpr");
x.t("name","entities");
x.t("name","networks");
x.t("name","vrlink-federate-name");
x.t("name","network");
x.t("name","name");
x.t("name","frequency");
x.t("name","scenario");
x.t("name","hla");
x.t("name","federation");
x.t("name","global");
x.t("name","used");
x.t("name","radios");
x.t("range","0.0");
x.t("range","default");
x.t("definition","descriptions");
x.t("definition","notifications");
x.t("ea3","ea4");
x.t("2-2","command");
x.t("2-2","configuring");
x.t("2-2","figure");
x.t("vrlink-application-number","xyz");
x.t("mak","technologies");
x.t("mak","rti");
x.t("wait","rtiexec");
x.t("/scenarios/vrf/unicast/unicast-hla.config","using");
x.t("direction","specified");
x.t("(cgf)","toolkit");
x.t("2.2.5.2","starting");
x.t("settings","menu");
x.t("enables","simulations");
x.t("enables","two");
x.t("enables","verbose");
x.t("enables","debug");
x.t("siso","dlc");
x.t("communication","effects");
x.t("communication","place");
x.t("communication","capabilities");
x.t("communication","successful");
x.t("communication","model");
x.t("wireless","model");
x.t("corresponds","rpr");
x.t("notifications","section");
x.t("notifications","sent");
x.t("ea4","ea5");
x.t("43.533208","6.680064");
x.t("addresses","substituted");
x.t("addresses","value");
x.t("2-3","command");
x.t("2-3","file");
x.t("2-3","directory");
x.t("follows","communication");
x.t("follows","select");
x.t("follows","client");
x.t("follows","using");
x.t("ends","2.2.4");
x.t("ends","exata");
x.t("ends","statistics");
x.t("stop","pressing");
x.t("stop","moving");
x.t("stop","button");
x.t("tasks","plans");
x.t("manual","vr-forces");
x.t("2.2.5.3","starting");
x.t("virtual","world");
x.t("opposing","neutral");
x.t("ea5","ea6");
x.t("perform","following");
x.t("dependent","parameters");
x.t("initializing","start");
x.t("initializing","2.2.5.3");
x.t("initializing","first");
x.t("initializing","click");
x.t("soon","modeled");
x.t("avoid","obstacles");
x.t("2-4","following");
x.t("2-4","forces");
x.t("2.2.5.4","vr-forces");
x.t("2.2.5.4","starting");
x.t("provides","services");
x.t("provides","intuitive");
x.t("compatible","external");
x.t("compatible","exata");
x.t("parameters","parameter");
x.t("parameters","table");
x.t("parameters","required");
x.t("parameters","listed");
x.t("parameters","perform");
x.t("parameters","addition");
x.t("parameters","configured");
x.t("parameters","respectively");
x.t("parameters","gui");
x.t("parameters","scenario");
x.t("parameters","properly");
x.t("parameters","federation");
x.t("parameters","described");
x.t("alternatively","mac");
x.t("(.xml)","file");
x.t("ea6","ea7");
x.t("ra1","ra2");
x.t("ra1","ra6");
x.t("zero","delay");
x.t("window","displays");
x.t("window","change");
x.t("window","exata");
x.t("window","vr-forces");
x.t("window","velocity");
x.t("window","configured");
x.t("window","displayed");
x.t("window","panel");
x.t("window","sent");
x.t("2.2.5.5","2.2.5.4");
x.t("2.2.5.5","running");
x.t("standard","defines");
x.t("standard","hla1516");
x.t("standard","note");
x.t("standard","used");
x.t("irregular","terrain");
x.t("place","large");
x.t("generic","mac");
x.t("pdu","dis");
x.t("ea7","seven");
x.t("ea7","ea1");
x.t("ra2","ra3");
x.t("sends","exata");
x.t("sends","command");
x.t("sends","byte");
x.t("sends","communication");
x.t("sends","quit");
x.t("sends","commands");
x.t("sends","messages");
x.t("sends","applicationspecificradiosignal");
x.t("sends","process");
x.t("sends","timeout");
x.t("sends","entity");
x.t("whichever","occurs");
x.t("indicate","entities");
x.t("simualtion-time","parameter");
x.t("loaded","described");
x.t("tanks","tells");
x.t("tanks","move");
x.t("tanks","two");
x.t("restart","simulation");
x.t("explained","following");
x.t("stack","communication");
x.t("hla1516","dependent");
x.t("hla1516","hla");
x.t("hla1516","../data/vr-link.xml");
x.t("vrlink-federation-name","required");
x.t("vrlink-federation-name","federate");
x.t("vrlink-federation-name","vrlink-rpr-fom-version");
x.t("vrlink-site-id","optional");
x.t("vrlink-site-id","application");
x.t("vrlink-mobility-interval","entities");
x.t("vrlink-mobility-interval","optional");
x.t("ra3","ra4");
x.t("destination","address");
x.t("destination","interaction");
x.t("destination","node");
x.t("destination","used");
x.t("destination","dynamically");
x.t("address","255.255.255.255");
x.t("address","default");
x.t("address","network");
x.t("address","address");
x.t("allows","non-programmers");
x.t("destroy","re-running");
x.t("programs","usually");
x.t("programs","mak");
x.t("programs","communicate");
x.t("linked","rti");
x.t("string","identify");
x.t("string","name");
x.t("string","value");
x.t("d.1","description");
x.t("d.1","exata");
x.t("fields","radiotype");
x.t("fields","entitytype");
x.t("ra4","ra5");
x.t("local","broadcast");
x.t("exata_home","/scenarios/vrf/unicast/unicast-hla1516.config");
x.t("exata_home","/scenarios/vrf/commsdemo");
x.t("exata_home","/scenarios/vrf/unicast/unicast-hla.config");
x.t("exata_home","/scenarios/vrf/unicast");
x.t("exata_home","/scenarios/vrf/commsdemo/commsdemo.scn");
x.t("13s","orientation");
x.t("velocity","speed");
x.t("velocity","50s");
x.t("velocity","30s");
x.t("velocity","entity");
x.t("quit","command");
x.t("quit","60s");
x.t("started","exata");
x.t("started","described");
x.t("started","testfed");
x.t("coordinates","node");
x.t("light","plane");
x.t("second","virtual");
x.t("second","wall");
x.t("addition","parameters");
x.t("earlier","modify");
x.t("attribute","example");
x.t("attribute","rpr");
x.t("attribute","updates");
x.t("attribute","define");
x.t("attribute","update");
x.t("metric","definition");
x.t("metric","data");
x.t("metric","definitions");
x.t("metric","update");
x.t("relative","position");
x.t("mounted","entity");
x.t("ra5","ra6");
x.t("moving","velocity");
x.t("moving","seconds");
x.t("receiving","commands");
x.t("functions","added");
x.t("d.3","details");
x.t("selected","using");
x.t("ra6","ra1");
x.t("ra6","six");
x.t("request","exata");
x.t("request","communication");
x.t("request","local");
x.t("present","exata");
x.t("begin","simulation");
x.t("mak\u2019s","vr-forces");
x.t("auto","connections");
x.t("progress","vr-forces");
x.t("rtis","refer");
x.t("rtis","additional");
x.t("blinking","light");
x.t("supported","exata");
x.t("supported","hla");
x.t("independent","time");
x.t("equivalent","external");
x.t("equivalent","vr-forces");
x.t("equivalent","compatible");
x.t("equivalent","second");
x.t("equivalent","scenario");
x.t("equivalent","hla");
x.t("configured","auto");
x.t("configured","section");
x.t("configured","described");
x.t("configured","order");
x.t("configured","2.2.4.2");
x.t("(.fed)","file");
x.t("d.4","lat");
x.t("frequency","network");
x.t("frequency","frequency");
x.t("frequency","node");
x.t("display","status");
x.t("commands","effects");
x.t("commands","register");
x.t("commands","providing");
x.t("commands","command");
x.t("commands","received");
x.t("commands","testfed");
x.t("commands","contained");
x.t("voice","unicast");
x.t("30s","100");
x.t("point","click");
x.t("calculate","damage");
x.t("visualization","scenario");
x.t("pause","button");
x.t("1.0","extensions");
x.t("1.0","version");
x.t("1.0","connection");
x.t("1.0","2.0017");
x.t("tick","interval");
x.t("loads","equivalent");
x.t("loads","scenario");
x.t("representation","exata");
x.t("delay","during");
x.t("respond","follows");
x.t("occurs","first");
x.t("occurs","processing");
x.t("damaged","destroyed");
x.t("hosted","radios");
x.t("damage","vehicle");
x.t("damage","models");
x.t("damage","12s");
x.t("sendcommrequest","20s");
x.t("sendcommrequest","15s");
x.t("next","command");
x.t("outlines","procedure");
x.t("respectively","exata");
x.t("collection","communicating");
x.t("command-line","based");
x.t("unit","ea1");
x.t("unit","meters");
x.t("minimum","change");
x.t("minimum","time");
x.t("feature","refer");
x.t("long","alt");
x.t("long","initial");
x.t("six","fields");
x.t("first","time");
x.t("first","client");
x.t("first","entity");
x.t("testfed-","exata");
x.t("select","rtiexec");
x.t("select","open");
x.t("select","external");
x.t("select","start");
x.t("select","rti");
x.t("select","hla");
x.t("messages","back");
x.t("messages","delivered");
x.t("messages","click");
x.t("messages","displayed");
x.t("button","2008");
x.t("button","exata");
x.t("button","start");
x.t("button","vr-forces");
x.t("button","restart");
x.t("button","begin");
x.t("button","rewind");
x.t("button","simulation");
x.t("1.1","basic");
x.t("1.1","1.1");
x.t("means","demo");
x.t("communicate","sending");
x.t("communicate","line");
x.t("communicate","run-time");
x.t("communicate","hla");
x.t("communicate","format");
x.t("initializes","rti");
x.t("number","optional");
x.t("number","global");
x.t("communications","effects");
x.t("communications","i.e");
x.t("communications","document");
x.t("communications","network");
x.t("communications","settings");
x.t("communications","request");
x.t("communications","environment");
x.t("entity\u2019s","position");
x.t("processing","message");
x.t("processing","entity");
x.t("gui","parameter");
x.t("gui","open");
x.t("gui","start");
x.t("gui","file");
x.t("gui","pressing");
x.t("gui","perform");
x.t("gui","allows");
x.t("gui","scenario");
x.t("gui","configuration");
x.t("gui","figure");
x.t("gui","simulation");
x.t("gui","metrics");
x.t("vrlink-hla-dynamic-statistics-metric-update-mode","send");
x.t("vrlink-hla-dynamic-statistics-metric-update-mode","optional");
x.t("43.533072","6.671681");
x.t("demo","start");
x.t("demo","rti");
x.t("demo","2.2.5.1");
x.t("demo","scenario");
x.t("demo","configuration");
x.t("demo","following");
x.t("demo","run");
x.t("demo","load");
x.t("implements","hla");
x.t("advance","clock");
x.t("1.3","rpr");
x.t("1.3","open");
x.t("1.3","type");
x.t("1.3","standard");
x.t("1.3","hla");
x.t("1.3","configuration");
x.t("1.3","federation");
x.t("0.0.0.0","indicates");
x.t("0.0.0.0","generally");
x.t("indicating","message");
x.t("signal","whichever");
x.t("enemy","destroy");
x.t("enemy","reports");
x.t("enemy","uav");
x.t("enemy","forces");
x.t("2013","scalable");
x.t("software","installed");
x.t("software","interoperate");
x.t("software","programs");
x.t("software","typically");
x.t("define","type");
x.t("define","protocol");
x.t("define","object");
x.t("longitude","altitude");
x.t("longitude","entity");
x.t("receive","position");
x.t("may","prevent");
x.t("unique","marking");
x.t("unique","among");
x.t("whether","nodeid");
x.t("whether","communication");
x.t("whether","metric");
x.t("whether","representation");
x.t("whether","hla");
x.t("multi-hop","otherwise");
x.t("n1;30000000;1,2,3,4;255.255.255.255","n2;35000000;5,6,7,8;255.255.255.255");
x.t("editor","external");
x.t("move","10s");
x.t("move","appropriate");
x.t("move","entity");
x.t("move","towards");
x.t("applicationspecificradiosignal","(asrs)");
x.t("applicationspecificradiosignal","interaction");
x.t("processes","commands");
x.t("launch","button");
x.t("config-file","name");
x.t("config-file","config-file");
x.t("interaction","federates");
x.t("interaction","potential");
x.t("interaction","indicating");
x.t("interaction","models");
x.t("interaction","classes");
x.t("interaction","summarizing");
x.t("interaction","sent");
x.t("instead","exata");
x.t("scenario","properties");
x.t("scenario","files");
x.t("scenario","refer");
x.t("scenario","external");
x.t("scenario","exata");
x.t("scenario","execution");
x.t("scenario","jointly");
x.t("scenario","start");
x.t("scenario","details");
x.t("scenario","simulated");
x.t("scenario","need");
x.t("scenario","vr-forces");
x.t("scenario","compatible");
x.t("scenario","loaded");
x.t("scenario","tanks");
x.t("scenario","progress");
x.t("scenario","equivalent");
x.t("scenario","define");
x.t("scenario","located");
x.t("scenario","communicating");
x.t("scenario","finished");
x.t("scenario","configuration");
x.t("scenario","right-click");
x.t("scenario","nodes");
x.t("scenario","joins");
x.t("scenario","created");
x.t("scenario","run");
x.t("scenario","simulation");
x.t("scenario","using");
x.t("scenario","manually");
x.t("scenario","behavior");
x.t("scenario","unicast");
x.t("extractor","tips");
x.t("extractor","generate");
x.t("requests","treated");
x.t("requests","vrlink-federation-name");
x.t("requests","vrlink-debug-2");
x.t("vrlink-tick-interval","mobility");
x.t("vrlink-tick-interval","optional");
x.t("vrlink-radios-file-path","required");
x.t("vrlink-radios-file-path","network");
x.t("dis","line");
x.t("dis","section");
x.t("nationality","lat");
x.t("nationality","nationality");
x.t("nationality","entity");
x.t("6.680064","0.5");
x.t("index","uniquely");
x.t("index","delta-x");
x.t("index","radio");
x.t("unicast.tesfed","exata");
x.t("starting","exata");
x.t("starting","rti");
x.t("starting","vr-forces");
x.t("starting","simulation");
x.t("hla","example");
x.t("hla","transmitters");
x.t("hla","1516");
x.t("hla","time");
x.t("hla","entities");
x.t("hla","standards");
x.t("hla","standard");
x.t("hla","means");
x.t("hla","communications");
x.t("hla","1.3");
x.t("hla","scenario");
x.t("hla","dis");
x.t("hla","format");
x.t("hla","section");
x.t("hla","click");
x.t("hla","terminology");
x.t("hla","federation");
x.t("hla","dynamic");
x.t("hla","protocol");
x.t("hla","debug");
x.t("hla","statistics");
x.t("compile","time");
x.t("section","2.2.1");
x.t("section","2.2.2");
x.t("section","2.2.3");
x.t("section","2.2.4");
x.t("section","describes");
x.t("section","2.2.5");
x.t("section","assumes");
x.t("section","2.2.5.2");
x.t("section","2.2.5.4");
x.t("section","2.2.5.5");
x.t("section","d.1");
x.t("section","d.3");
x.t("section","d.4");
x.t("section","outlines");
x.t("section","2.1.3");
x.t("section","b.5");
x.t("section","2.2.2.1.1");
x.t("section","2.2.2.1.2");
x.t("section","2.2.2.1.3");
x.t("section","2.3");
x.t("section","describe");
x.t("properly","alternatively");
x.t("properly","configured");
x.t("hla13","hla1516");
x.t("hla13","hla");
x.t("hla13","../data/vr-link.fed");
x.t("filename","name");
x.t("filename","hla");
x.t("format","entities");
x.t("format","networks");
x.t("format","radios");
x.t("format","entries");
x.t("n2;35000000;5,6,7,8;255.255.255.255","n3;40000000;9,10,11,12;255.255.255.255");
x.t("asrs","interaction");
x.t("directory","exata_home");
x.t("directory","folder");
x.t("15s","voice");
x.t("15s","seconds");
x.t("opens","figure");
x.t("(rtiexec)","select");
x.t("added","simulation");
x.t("interest","created");
x.t("vrlink-debug","enable");
x.t("vrlink-debug","optional");
x.t("scope","gui");
x.t("scope","global");
x.t("200ms","minimum");
x.t("initial","altitude");
x.t("initial","longitude");
x.t("initial","latitude");
x.t("node","moves");
x.t("node","marking");
x.t("node","exata");
x.t("node","stop");
x.t("node","sends");
x.t("node","node");
x.t("node","ids");
x.t("node","message");
x.t("node","moved");
x.t("node","corresponding");
x.t("node","starts");
x.t("node","belong");
x.t("assigned","run");
x.t("recipients","processed");
x.t("recipients","occurs");
x.t("expected","behavior");
x.t("interactions","publishing");
x.t("interactions","federates");
x.t("interactions","exata");
x.t("interactions","request");
x.t("interactions","transitory");
x.t("reference","manual");
x.t("reference","federation");
x.t("scenarios","appendix");
x.t("scenarios","create");
x.t("scenarios","exata");
x.t("scenarios","vr-forces");
x.t("scenarios","hla");
x.t("scenarios","testfed");
x.t("scenarios","positioning");
x.t("scenarios","following");
x.t("scenarios","run");
x.t("steps","open");
x.t("steps","listed");
x.t("steps","start");
x.t("steps","assume");
x.t("steps","explained");
x.t("steps","scenario");
x.t("enable","debugging");
x.t("enable","external");
x.t("enable","hla");
x.t("enable","vr-link");
x.t("enable","verbose");
x.t("client","federate");
x.t("client","soon");
x.t("client","loads");
x.t("client","scenario");
x.t("client","simulation");
x.t("notification","followed");
x.t("notification","contents");
x.t("follow","roads");
x.t("correspond","federation");
x.t("reports","location");
x.t("level","architecture");
x.t("level","detail");
x.t("groups","radios");
x.t("identifies","radio");
x.t("ids","list");
x.t("ids","destination");
x.t("ids","nodes");
x.t("ids","separated");
x.t("n7;230000000;24,27;0.0.0.0","2.2.2.2");
x.t("located","exata_home");
x.t("located","demo");
x.t("located","folder");
x.t("vehicle","dynamics");
x.t("fully","configurable");
x.t("centric","operations");
x.t("folder","exata");
x.t("folder","exata_home");
x.t("uav","moves");
x.t("uav","turn");
x.t("comprises","rti");
x.t("comprises","steps");
x.t("known","process");
x.t("vrlink-debug-2","federation");
x.t("vrlink-debug-2","optional");
x.t("vrlink-xyz-epsilon","tick");
x.t("vrlink-xyz-epsilon","optional");
x.t("message","complete");
x.t("message","delivered");
x.t("message","interaction");
x.t("message","node");
x.t("message","notification");
x.t("environment","variables");
x.t("environment","section");
x.t("100","velocity");
x.t("100","100");
x.t("100","seconds");
x.t("60s","figure");
x.t("60s","seconds");
x.t("successfully","exata");
x.t("(hla)","specification");
x.t("(hla)","protocol");
x.t("communicating","entities");
x.t("communicating","simulations");
x.t("documentation","rti");
x.t("documentation","data");
x.t("e.g","multicast");
x.t("multicast","addresses");
x.t("single-hop","broadcasts");
x.t("epsilon","global");
x.t("2.1.3","run");
x.t("click","during");
x.t("click","launch");
x.t("click","run");
x.t("click","connect");
x.t("click","play");
x.t("enter","following");
x.t("finished","initializing");
x.t("architecture","(hla)");
x.t("vr-link","interface");
x.t("vr-link","statistics");
x.t("4.1","earlier");
x.t("compared","rpr-fom");
x.t("displayed","command");
x.t("displayed","select");
x.t("displayed","output");
x.t("displayed","testfed");
x.t("latitude","longitude");
x.t("latitude","entity");
x.t("configuration","files");
x.t("configuration","dialog");
x.t("configuration","file");
x.t("configuration","communication");
x.t("configuration","addition");
x.t("configuration","hla");
x.t("configuration","enable");
x.t("configuration","(.config)");
x.t("include","nodeid");
x.t("include","metric");
x.t("include","following");
x.t("brief","default");
x.t("brief","include");
x.t("unicast.testfed","figure");
x.t("unicast.testfed","testfed");
x.t("10s","0.01");
x.t("orientation","14s");
x.t("additional","process");
x.t("federation","executive");
x.t("federation","exata");
x.t("federation","execution");
x.t("federation","connection");
x.t("federation","rti");
x.t("federation","file");
x.t("federation","name");
x.t("federation","unique");
x.t("federation","documentation");
x.t("federation","vrlink-rpr-fom-version");
x.t("federation","consisting");
x.t("federation","defined");
x.t("federation","join");
x.t("federation","simulation");
x.t("federation","object");
x.t("federation","comprising");
x.t("terminology","collection");
x.t("primarily","used");
x.t("running","full");
x.t("running","exata");
x.t("running","start");
x.t("running","stop");
x.t("running","joint");
x.t("terrain","features");
x.t("terrain","follow");
x.t("terrain","used");
x.t("terrain","model");
x.t("value","parameter");
x.t("value","indicated");
x.t("value","description");
x.t("value","marking");
x.t("value","exata");
x.t("value","0.0.0.0");
x.t("value","country");
x.t("vrlink-rpr-fom-version","required");
x.t("vrlink-rpr-fom-version","parameters");
x.t("vrlink-rpr-fom-version","federation");
x.t("usa","43.533081");
x.t("usa","43.533208");
x.t("usa","43.533072");
x.t("6.671681","0.5");
x.t("represented","exata");
x.t("represented","hla");
x.t("interval","global");
x.t("/scenarios/vrf/unicast","run");
x.t("/scenarios/vrf/unicast","contains");
x.t("till","completion");
x.t("b.5","details");
x.t("right-click","select");
x.t("sensors","look");
x.t("fom","example");
x.t("fom","version");
x.t("fom","physical");
x.t("fom","federate");
x.t("fom","1.0");
x.t("fom","define");
x.t("fom","hla");
x.t("fom","radio");
x.t("fom","used");
x.t("send","nodeid");
x.t("send","metric");
x.t("send","interactions");
x.t("z-coordinates","entity\u2019s");
x.t("figure","2-1");
x.t("figure","2-2");
x.t("figure","2-3");
x.t("figure","2-4");
x.t("depending","configuration");
x.t("already","installed");
x.t("already","started");
x.t("already","running");
x.t("../data/vr-link.xml","unicast");
x.t("process","globally");
x.t("process","rti");
x.t("process","vrlink-mobility-interval");
x.t("process","initializes");
x.t("process","message");
x.t("process","called");
x.t("process","typically");
x.t("generate","equivalent");
x.t("radio","type");
x.t("radio","ra1");
x.t("radio","mounted");
x.t("radio","index");
x.t("radio","transmitter");
x.t("force","nationality");
x.t("force","force");
x.t("force","entity");
x.t("broadcast","address");
x.t("xyz","epsilon");
x.t("generated","exata");
x.t("programming","necessary");
x.t("connections","rti");
x.t("connections","configuration");
x.t("computer","running");
x.t("services","however");
x.t("services","optional");
x.t("services","distributed");
x.t("simulations","enables");
x.t("simulations","communicate");
x.t("simulations","connections");
x.t("simulations","called");
x.t("simulations","using");
x.t("plane","periodically");
x.t("plane","blink");
x.t("plane","receive");
x.t("plane","latitude");
x.t("considered","real-time");
x.t("distribution","federates");
x.t("distribution","primarily");
x.t("models","2.2.2.1");
x.t("models","default");
x.t("models","traffic");
x.t("models","fully");
x.t("although","addresses");
x.t("runs","time");
x.t("panel","navigate");
x.t("panel","display");
x.t("panel","select");
x.t("panel","scenario");
x.t("exercise","simulate");
x.t("platform","reference");
x.t("sequence","events");
x.t("dynamic","statistics");
x.t("nodes","exata");
x.t("nodes","during");
x.t("nodes","move");
x.t("nodes","separated");
x.t("nodes","belong");
x.t("output","window");
x.t("output","hla");
x.t("site","global");
x.t("site","used");
x.t("applicable","vrlink-hla-dynamic-statistis");
x.t("vrlink-hla-dynamic-statistics-send-nodeid-descriptions","send");
x.t("vrlink-hla-dynamic-statistics-send-nodeid-descriptions","optional");
x.t("friendly","opposing");
x.t("transmissions","network");
x.t("consisting","exata");
x.t("location","tanks");
x.t("location","sendcommrequest");
x.t("location","select");
x.t("ctrl","command");
x.t("module","implements");
x.t("module","called");
x.t("information","exchanged");
x.t("optional","time");
x.t("optional","supported");
x.t("optional","scope");
x.t("overhead","running");
x.t("tool","appendix");
x.t("capabilities","damage");
x.t("capabilities","communicating");
x.t("itm","propagation");
x.t("configure","hla");
x.t("configure","simulation");
x.t("data","(.xml)");
x.t("data","note");
x.t("host","entity");
x.t("typical","hla");
x.t("interact","file");
x.t("interact","terrain");
x.t("sensor","updates");
x.t("sensor","capabilities");
x.t("commsdemo-hla.config","using");
x.t("defined","implement");
x.t("defined","module");
x.t("exchanged","simulations");
x.t("hla-specification","hla-specification");
x.t("hla-specification","either");
x.t("entitytype","attribute");
x.t("6.676147","0.5");
x.t("n3;40000000;9,10,11,12;255.255.255.255","n4;45000000;13,14,15,16;255.255.255.255");
x.t("received","exata");
x.t("received","initialization");
x.t("received","testfed");
x.t("received","causes");
x.t("appropriate","exata");
x.t("timeout","interaction");
x.t("timeout","notification");
x.t("timeout","value");
x.t("moved","specified");
x.t("values","vrlink-federation-name");
x.t("values","802.11");
x.t("values","object");
x.t("propagation","models");
x.t("propagation","model");
x.t("prevent","communication");
x.t("join","simulators");
x.t("4000","application");
x.t("application","number");
x.t("application","unique");
x.t("application","site");
x.t("meters","height");
x.t("meters","minimum");
x.t("meters","using");
x.t("case","default");
x.t("successful","exata");
x.t("successful","zero");
x.t("4.0.4","vr-forces");
x.t("specification","rti");
x.t("specification","enables");
x.t("called","federate");
x.t("called","federation");
x.t("procedure","start");
x.t("procedure","starting");
x.t("procedure","using");
x.t("described","appendix");
x.t("described","below");
x.t("described","table");
x.t("described","section");
x.t("global","vrlink-entities-file-path");
x.t("global","vrlink-networks-file-path");
x.t("global","vrlink-hla-dynamic-statistics-send-metric-definitions");
x.t("global","time");
x.t("global","vrlink-fed-file-path");
x.t("global","vrlink-hla-dynamic-statistics");
x.t("global","list");
x.t("global","vrlink-federate-name");
x.t("global","vrlink-application-number");
x.t("global","vrlink-federation-name");
x.t("global","vrlink-site-id");
x.t("global","vrlink-mobility-interval");
x.t("global","string");
x.t("global","vrlink-hla-dynamic-statistics-metric-update-mode");
x.t("global","vrlink-tick-interval");
x.t("global","vrlink-radios-file-path");
x.t("global","filename");
x.t("global","vrlink-debug");
x.t("global","vrlink-debug-2");
x.t("global","vrlink-xyz-epsilon");
x.t("global","vrlink-rpr-fom-version");
x.t("global","vrlink-hla-dynamic-statistics-send-nodeid-descriptions");
x.t("global","integer");
x.t("global","real");
x.t("above","wgs84");
x.t("phase","exata");
x.t("phase","depending");
x.t("finish","initializing");
x.t("txstate","13s");
x.t("maps","entities");
x.t("re-running","simulation");
x.t("rewind","button");
x.t("protocol","rpr");
x.t("protocol","rti");
x.t("protocol","high");
x.t("protocol","parameters");
x.t("protocol","generic");
x.t("protocol","stack");
x.t("protocol","mak\u2019s");
x.t("protocol","may");
x.t("protocol","section");
x.t("protocol","hla13");
x.t("protocol","comprises");
x.t("protocol","vr-link");
x.t("protocol","include");
x.t("protocol","terrain");
x.t("protocol","specification");
x.t("protocol","note");
x.t("protocol","testfed");
x.t("protocol","run");
x.t("protocol","used");
x.t("protocol","2.2");
x.t("protocol","general");
x.t("protocol","without");
x.t("protocol","forces");
x.t("two","tanks");
x.t("two","software");
x.t("classes","interest");
x.t("classes","defined");
x.t("classes","used");
x.t("classes","object");
x.t("802.11","mac");
x.t("note","parameter");
x.t("note","simulators");
x.t("note","press");
x.t("note","default");
x.t("note","want");
x.t("note","section");
x.t("note","node");
x.t("note","application");
x.t("verbose","debugging");
x.t("verbose","level");
x.t("verbose","brief");
x.t("verbose","include");
x.t("verbose","debug");
x.t("integer","range");
x.t("otherwise","relayed");
x.t("summarizing","delivery");
x.t("12s","txstate");
x.t("done","using");
x.t("typically","rti");
x.t("typically","comprises");
x.t("(fom)","information");
x.t("transitory","example");
x.t("testfed","uses");
x.t("testfed","exata");
x.t("testfed","response");
x.t("testfed","test");
x.t("testfed","window");
x.t("testfed","sends");
x.t("testfed","hla1516");
x.t("testfed","started");
x.t("testfed","commands");
x.t("testfed","section");
x.t("testfed","hla");
x.t("testfed","hla13");
x.t("testfed","displayed");
x.t("testfed","primarily");
x.t("testfed","testfed");
x.t("testfed","debug");
x.t("testfed","simulation");
x.t("based","program");
x.t("debug","messages");
x.t("debug","output");
x.t("itself","vr-forces");
x.t("itself","hla");
x.t("joins","federation");
x.t("positioning","forces");
x.t("/scenarios/vrf/commsdemo/commsdemo.scn","note");
x.t("created","federates");
x.t("created","exata");
x.t("driven","independent");
x.t("driven","simulation");
x.t("order","hla");
x.t("order","run");
x.t("joint","simulation");
x.t("real","range");
x.t("2.2.2.1.1","vrlink-radios-file-path");
x.t("2.2.2.1.1","format");
x.t("2.2.2.1.1","radio");
x.t("country","field");
x.t("causes","node");
x.t("obstacles","detect");
x.t("simulation","times");
x.t("simulation","responses");
x.t("simulation","external");
x.t("simulation","time");
x.t("simulation","exata");
x.t("simulation","assumes");
x.t("simulation","engine");
x.t("simulation","command");
x.t("simulation","initialization");
x.t("simulation","continues");
x.t("simulation","again");
x.t("simulation","ends");
x.t("simulation","vrlink-site-id");
x.t("simulation","linked");
x.t("simulation","started");
x.t("simulation","configured");
x.t("simulation","button");
x.t("simulation","gui");
x.t("simulation","software");
x.t("simulation","processes");
x.t("simulation","scenario");
x.t("simulation","hla");
x.t("simulation","section");
x.t("simulation","client");
x.t("simulation","displayed");
x.t("simulation","federation");
x.t("simulation","running");
x.t("simulation","connections");
x.t("simulation","considered");
x.t("simulation","runs");
x.t("simulation","exercise");
x.t("simulation","tool");
x.t("simulation","called");
x.t("simulation","testfed");
x.t("simulation","simulation");
x.t("simulation","starts");
x.t("simulation","run");
x.t("simulation","forces");
x.t("used","receiver");
x.t("used","exata");
x.t("used","test");
x.t("used","name");
x.t("used","multi-hop");
x.t("used","scenario");
x.t("used","hla");
x.t("used","single-hop");
x.t("used","federation");
x.t("used","transmissions");
x.t("used","specify");
x.t("model","library");
x.t("model","needs");
x.t("model","rpr");
x.t("model","effects");
x.t("model","(itm)");
x.t("model","terrain");
x.t("model","(fom)");
x.t("management","hla");
x.t("management","services");
x.t("following","example");
x.t("following","tips");
x.t("following","left");
x.t("following","exata");
x.t("following","sections");
x.t("following","command");
x.t("following","parameters");
x.t("following","hla");
x.t("following","format");
x.t("following","steps");
x.t("following","following");
x.t("following","using");
x.t("run","simultaneously");
x.t("run","current");
x.t("run","exata");
x.t("run","time");
x.t("run","commsdemo");
x.t("run","demo");
x.t("run","scenario");
x.t("run","hla");
x.t("run","till");
x.t("run","testfed");
x.t("run","itself");
x.t("run","simulation");
x.t("separated","large");
x.t("separated","commas");
x.t("either","unsuccessful");
x.t("either","hla13");
x.t("either","timeout");
x.t("500ms","minimum");
x.t("entity","state");
x.t("entity","alt");
x.t("entity","type");
x.t("entity","exata");
x.t("entity","objects");
x.t("entity","updates");
x.t("entity","delta-x");
x.t("entity","specified");
x.t("entity","string");
x.t("entity","attribute");
x.t("entity","long");
x.t("entity","whether");
x.t("entity","federation");
x.t("entity","friendly");
x.t("entity","meters");
x.t("entity","entity");
x.t("entity","position");
x.t("entity","deactivate");
x.t("entity","update");
x.t("2.2.2.1.2","vrlink-networks-file-path");
x.t("2.2.2.1.2","vrlink-hla-dynamic-statistics");
x.t("2.2.2.1.2","format");
x.t("wgs84","ellipsoid");
x.t("corresponding","radio");
x.t("system","axes");
x.t("system","panel");
x.t("system","entity");
x.t("starts","warm-up");
x.t("starts","initialization");
x.t("starts","initializing");
x.t("starts","moving");
x.t("starts","simulation");
x.t("contained","file");
x.t("perfect","communications");
x.t("turn","sensors");
x.t("2.2","high");
x.t("using","dynamics");
x.t("using","sample");
x.t("using","exata");
x.t("using","mak");
x.t("using","gui");
x.t("using","extractor");
x.t("using","hla");
x.t("using","fom");
x.t("using","world");
x.t("using","forces");
x.t("class","representing");
x.t("general","simulating");
x.t("general","procedure");
x.t("2.2.2.1.3","format");
x.t("setting","parameters");
x.t("play","button");
x.t("routes","waypoints");
x.t("connect","2.2.5.5");
x.t("connect","starting");
x.t("connect","note");
x.t("distributed","simulations");
x.t("statistics","enabled");
x.t("statistics","interface");
x.t("statistics","file");
x.t("statistics","dependent");
x.t("statistics","parameters");
x.t("statistics","feature");
x.t("statistics","global");
x.t("statistics","sent");
x.t("manually","extractor");
x.t("2.3","file");
x.t("consults","entities");
x.t("2.2.4.1","creating");
x.t("assigning","tasks");
x.t("vehicles","interact");
x.t("(rti)","module");
x.t("wall","clock");
x.t("world","coordinate");
x.t("world","supported");
x.t("without","overhead");
x.t("load","file");
x.t("load","scenario");
x.t("simulate","scenario");
x.t("simulate","communicating");
x.t("modify","scenario");
x.t("swapped","compared");
x.t("definitions","global");
x.t("waits","first");
x.t("associated","exata");
x.t("associated","commands");
x.t("2.2.4.2","testfed-");
x.t("../data/vr-link.fed","unicast");
x.t("behavior","scenario");
x.t("behavior","testfed");
x.t("operations","run");
x.t("towards","enemy");
x.t("position","updates");
x.t("position","rti");
x.t("position","latitude");
x.t("position","radio");
x.t("position","position");
x.t("position","updated");
x.t("(.config)","file");
x.t("transmitter","objects");
x.t("transmitter","object");
x.t("intuitive","gui");
x.t("describe","run");
x.t("representing","plane");
x.t("sent","exata");
x.t("sent","vrlink-hla-dynamic-statistics-metric-update-mode");
x.t("sent","interaction");
x.t("sent","section");
x.t("sent","client");
x.t("sent","using");
x.t("forces","exata");
x.t("forces","(cgf)");
x.t("forces","creating");
x.t("forces","calculate");
x.t("forces","configured");
x.t("forces","first");
x.t("forces","section");
x.t("forces","simulation");
x.t("radios","files");
x.t("radios","response");
x.t("radios","exata");
x.t("radios","turned");
x.t("radios","file");
x.t("radios","communicate");
x.t("entries","line");
x.t("broadcasts","0.0.0.0");
x.t("complexity","scenario");
x.t("deactivate","associated");
x.t("toolkit","provides");
x.t("plans","simple");
x.t("object","marking");
x.t("object","interaction");
x.t("object","host");
x.t("object","classes");
x.t("object","model");
x.t("object","class");
x.t("object","attributes");
x.t("attributes","seven");
x.t("attributes","permanent");
x.t("attributes","marking");
x.t("attributes","rti");
x.t("attributes","federate");
x.t("attributes","six");
x.t("attributes","interaction");
x.t("attributes","node");
x.t("attributes","send");
x.t("update","mode");
x.t("update","notifications");
x.t("update","section");
x.t("update","brief");
x.t("update","received");
x.t("update","entity");
x.t("update","consults");
x.t("update","sent");
x.t("update","object");
x.t("comprising","exata");
x.t("user\u2019s","guide");
x.t("specify","proper");
x.t("updated","exata");
x.t("metrics","selected");
x.t("detail","metric");
x.t("belong","network");
x.t("unicast","press");
x.t("unicast","sendcommrequest");
x.t("unicast","located");
x.t("unicast","case");
x.t("unicast","run");
x.t("dynamically","assigned");
x.t("generally","used");
x.t("contains","commands");
x.t("seconds","2.2.5");
x.t("seconds","quit");
x.t("seconds","testfed");
}

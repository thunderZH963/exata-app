function FileData_Pairs(x)
{
x.t("ieee","1516");
x.t("ieee","standard");
x.t("real-time","exercise");
x.t("supports","dis");
x.t("extensions","interface");
x.t("vrlink-debug-print-damage","optional");
x.t("vrlink-debug-print-damage","debug");
x.t("equal","destroyed");
x.t("255","default");
x.t("interfaces","vrlink-xyz-epsilon");
x.t("interfaces","vr-link");
x.t("example","destroyed");
x.t("included","exata");
x.t("tells","uav");
x.t("appendix","describes");
x.t("appendix","table");
x.t("appendix","details");
x.t("below","steps");
x.t("below","configure");
x.t("provide","communication");
x.t("parameter","publishing");
x.t("parameter","irrespective");
x.t("parameter","limits");
x.t("parameter","exata");
x.t("parameter","vrlink");
x.t("parameter","command");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","debug");
x.t("parameter","subnet");
x.t("parameter","radios");
x.t("gcc","position");
x.t("publishing","federate");
x.t("properties","editor");
x.t("indicated","original");
x.t("irrespective","external");
x.t("http://www.mak.com","vr-forces");
x.t("2.2.2","describes");
x.t("2.2.2","need");
x.t("2.2.2","demo");
x.t("2.2.2","move");
x.t("version","exata");
x.t("suffers","damage");
x.t("receives","sends");
x.t("receives","signal");
x.t("receives","entity");
x.t("defines","groups");
x.t("moves","entity");
x.t("moves","towards");
x.t("2008","2013");
x.t("simulators","performed");
x.t("within","exata");
x.t("federates","exercise");
x.t("federates","vrlink-multicast-ttl");
x.t("needs","done");
x.t("needs","pass");
x.t("vrlink-entities-file-path","required");
x.t("vrlink-entities-file-path","radios");
x.t("vrlink-networks-file-path","required");
x.t("vrlink-networks-file-path","disable");
x.t("files","exata");
x.t("files","scenario");
x.t("files","section");
x.t("modeling","section");
x.t("full","constructive");
x.t("engage","enemy");
x.t("scalable","network");
x.t("describes","create");
x.t("describes","exata");
x.t("describes","dis");
x.t("describes","sequence");
x.t("describes","run");
x.t("describes","general");
x.t("create","exata");
x.t("create","scenarios");
x.t("create","simulation");
x.t("effects","modeling");
x.t("effects","external");
x.t("effects","appropriately");
x.t("effects","requests");
x.t("refer","exata");
x.t("refer","vr-forces");
x.t("table","2-1");
x.t("table","2-4");
x.t("table","2-5");
x.t("table","2-6");
x.t("description","vrlink-debug-print-comms");
x.t("vrlink-debug-print-transmitter-pdu","optional");
x.t("vrlink-debug-print-transmitter-pdu","debug");
x.t("sending","vrlink-dis-port");
x.t("sending","receiving");
x.t("transmitters","dis");
x.t("ttl","global");
x.t("delivery","status");
x.t("build","scenarios");
x.t("(dis)","ieee");
x.t("(dis)","protocol");
x.t("1516","dis");
x.t("events","exercise");
x.t("events","sequence");
x.t("events","typical");
x.t("required","scope");
x.t("required","configure");
x.t("vrlink-application-id","optional");
x.t("roads","avoid");
x.t("2.3.5.1","creating");
x.t("vrlink-debug-print-mobility","optional");
x.t("vrlink-debug-print-mobility","debug");
x.t("limits","duration");
x.t("skips","updates");
x.t("completion","scenario");
x.t("2.3.5.2","starting");
x.t("current","version");
x.t("destroyed","hosted");
x.t("destroyed","entity");
x.t("destroyed","radios");
x.t("demonstration","section");
x.t("computer-generated","forces");
x.t("2.3.5.3","vr-forces");
x.t("2.3.5.3","starting");
x.t("line","parameter");
x.t("line","start");
x.t("line","perform");
x.t("line","window");
x.t("line","equivalent");
x.t("line","configuration");
x.t("field","equal");
x.t("field","appears");
x.t("field","entity");
x.t("appearance","record");
x.t("last","received");
x.t("last","successful");
x.t("last","scheduled");
x.t("until","pending");
x.t("uses","non-blocking");
x.t("uses","scenario");
x.t("skipped","setting");
x.t("program","included");
x.t("dynamics","sensor");
x.t("technologies","vr-forces");
x.t("dialog","opens");
x.t("2.3.5.4","2.3.5.3");
x.t("2.3.5.4","running");
x.t("interface","address");
x.t("interface","communications");
x.t("interface","socket");
x.t("interface","vr-link");
x.t("interface","protocol");
x.t("interface","created");
x.t("interface","2.3");
x.t("today","simplicity");
x.t("support","dynamic");
x.t("vrlink-protocol","dis");
x.t("state","pdus");
x.t("state","pdu");
x.t("state","(on/off)");
x.t("state","global");
x.t("kernel","allow");
x.t("press","pause");
x.t("press","play");
x.t("configurable","programming");
x.t("necessary","entities");
x.t("look","enemy");
x.t("change","coordinates");
x.t("change","reflected");
x.t("change","directory");
x.t("sample","scenario");
x.t("open","command");
x.t("open","demo");
x.t("open","scenario");
x.t("open","output");
x.t("type","following");
x.t("providing","sensor");
x.t("/scenarios/vrf/commsdemo/commsdemo-dis.config","click");
x.t("exata","appendix");
x.t("exata","provide");
x.t("exata","parameter");
x.t("exata","receives");
x.t("exata","files");
x.t("exata","vrlink-debug-print-transmitter-pdu");
x.t("exata","refer");
x.t("exata","demonstration");
x.t("exata","press");
x.t("exata","calls");
x.t("exata","exata");
x.t("exata","details");
x.t("exata","vr-forces");
x.t("exata","sends");
x.t("exata","simualtion-time");
x.t("exata","acting");
x.t("exata","vrlink-mobility-interval");
x.t("exata","addition");
x.t("exata","loads");
x.t("exata","gui");
x.t("exata","whether");
x.t("exata","config-file");
x.t("exata","dis");
x.t("exata","scenario");
x.t("exata","hla");
x.t("exata","expected");
x.t("exata","scenarios");
x.t("exata","4.1");
x.t("exata","configuration");
x.t("exata","distribution");
x.t("exata","nodes");
x.t("exata","described");
x.t("exata","probabilistically");
x.t("exata","testfed");
x.t("exata","run");
x.t("exata","simulation");
x.t("exata","starts");
x.t("exata","model");
x.t("exata","using");
x.t("exata","waits");
x.t("exata","user\u2019s");
x.t("external","interfaces");
x.t("external","simulator");
x.t("external","communication");
x.t("external","communications");
x.t("external","simulation");
x.t("time","needs");
x.t("time","skips");
x.t("time","exata");
x.t("time","external");
x.t("time","depends");
x.t("time","specified");
x.t("time","range");
x.t("time","empty");
x.t("time","load");
x.t("calls","recv");
x.t("0.5","unit");
x.t("non-programmers","build");
x.t("left","panel");
x.t("multiple","simulation");
x.t("sections","create");
x.t("connection","vrlink-application-id");
x.t("connection","left");
x.t("connection","note");
x.t("recv","until");
x.t("recv","check");
x.t("recv","called");
x.t("sockets","theoretically");
x.t("execution","vr-forces");
x.t("i.e","messages");
x.t("regardless","communications");
x.t("simulating","scenario");
x.t("listed","below");
x.t("listed","table");
x.t("entities","external");
x.t("entities","file");
x.t("entities","vr-forces");
x.t("entities","damaged");
x.t("entities","scenario");
x.t("entities","dis");
x.t("entities","radios");
x.t("default","0.5");
x.t("default","enables");
x.t("default","3000");
x.t("default","127.255.255.255");
x.t("default","5ms");
x.t("default","200ms");
x.t("default","multicast");
x.t("default","value");
x.t("default","exercise");
x.t("default","site");
x.t("default","4000");
x.t("default","disables");
x.t("default","500ms");
x.t("default","127.0.0.1");
x.t("vrlink-exercise-id","parameters");
x.t("vrlink-exercise-id","optional");
x.t("networks","file");
x.t("networks","socket");
x.t("back","exata");
x.t("mobility","updates");
x.t("mobility","event");
x.t("mobility","interval");
x.t("mobility","global");
x.t("warm-up","phase");
x.t("original","signal");
x.t("detect","engage");
x.t("assumes","perfect");
x.t("jointly","vr-forces");
x.t("single","real-time");
x.t("start","external");
x.t("start","exata");
x.t("start","vr-forces");
x.t("start","programs");
x.t("start","simulation");
x.t("start","forces");
x.t("vrlink","vrlink-protocol");
x.t("vrlink","dis");
x.t("want","run");
x.t("details","refer");
x.t("details","exata");
x.t("details","configuring");
x.t("details","2.3.5");
x.t("details","demo");
x.t("details","2.3.4.1");
x.t("details","using");
x.t("turned","vrlink-debug-print-mobility");
x.t("turned","exata");
x.t("among","federates");
x.t("updates","vrlink-entities-file-path");
x.t("updates","skipped");
x.t("updates","network");
x.t("objects","exata");
x.t("modeled","message");
x.t("waypoints","assigning");
x.t("/scenarios/vrf/commsdemo","2.3.5.2");
x.t("/scenarios/vrf/commsdemo","enter");
x.t("engine","simulations");
x.t("document","2.3.1");
x.t("command","line");
x.t("command","window");
x.t("command","testfed");
x.t("command","run");
x.t("printing","details");
x.t("printing","information");
x.t("printing","mapping");
x.t("printing","hex");
x.t("printing","transmitter");
x.t("vrlink-debug-print-tx-state","optional");
x.t("vrlink-debug-print-tx-state","debug");
x.t("simulator","create");
x.t("simulator","2.3.2");
x.t("simulator","scenario");
x.t("simulator","load");
x.t("simulator","simulate");
x.t("simulated","refer");
x.t("simulated","2.3.2.1");
x.t("file","defines");
x.t("file","networks");
x.t("file","vrlink");
x.t("file","file");
x.t("file","path");
x.t("file","corresponds");
x.t("file","exata_home");
x.t("file","demo");
x.t("file","scenario");
x.t("file","section");
x.t("file","commsdemo-dis.config");
x.t("file","correspond");
x.t("file","generated");
x.t("file","described");
x.t("file","global");
x.t("file","system");
x.t("file","radios");
x.t("file","specify");
x.t("list","default");
x.t("pdus","exata");
x.t("pdus","vrlink-exercise-id");
x.t("pdus","local");
x.t("pdus","request");
x.t("pdus","vrlink-dis-ip-address");
x.t("pdus","socket");
x.t("pdus","screen");
x.t("pdus","global");
x.t("again","vrlink-max-receive-duration");
x.t("again","following");
x.t("vrlink-max-receive-duration","xyz");
x.t("vrlink-max-receive-duration","optional");
x.t("federate","command-line");
x.t("federate","send");
x.t("need","configured");
x.t("need","represented");
x.t("initialization","open");
x.t("initialization","time");
x.t("initialization","status");
x.t("initialization","complete");
x.t("status","potential");
x.t("status","messages");
x.t("status","dis");
x.t("appropriately","example");
x.t("commsdemo","scenario");
x.t("udp","broadcast");
x.t("udp","port");
x.t("complete","warm-up");
x.t("complete","either");
x.t("treated","either");
x.t("during","scenario");
x.t("during","simulation");
x.t("constructive","simulation");
x.t("machine","network");
x.t("machine","select");
x.t("menu","select");
x.t("interfacing","multiple");
x.t("guide","details");
x.t("guide","parameters");
x.t("guide","select");
x.t("guide","dis");
x.t("guide","starting");
x.t("network","technologies");
x.t("network","interface");
x.t("network","centric");
x.t("check","dis");
x.t("normally","exata");
x.t("timeouts","reflected");
x.t("timeouts","global");
x.t("simple","point");
x.t("units","dis");
x.t("large","value");
x.t("configuring","dis");
x.t("configuring","scenarios");
x.t("depends","complexity");
x.t("unsuccessful","successful");
x.t("traffic","respond");
x.t("vr-forces","http://www.mak.com");
x.t("vr-forces","computer-generated");
x.t("vr-forces","press");
x.t("vr-forces","exata");
x.t("vr-forces","details");
x.t("vr-forces","perform");
x.t("vr-forces","visualization");
x.t("vr-forces","communicate");
x.t("vr-forces","gui");
x.t("vr-forces","scenario");
x.t("vr-forces","4.0.4");
x.t("vr-forces","simulation");
x.t("vr-forces","using");
x.t("vr-forces","vehicles");
x.t("vr-forces","user\u2019s");
x.t("navigate","exata");
x.t("pressing","stop");
x.t("pressing","ctrl");
x.t("2-1","configured");
x.t("delivered","regardless");
x.t("delivered","destination");
x.t("potential","recipients");
x.t("processed","signal");
x.t("specified","exata");
x.t("test","exata");
x.t("test","federate");
x.t("operation","ease");
x.t("creating","scenarios");
x.t("creating","routes");
x.t("range","255");
x.t("range","default");
x.t("range","65535");
x.t("name","entities");
x.t("name","networks");
x.t("name","scenario");
x.t("name","radios");
x.t("vrlink-application-number","multicast");
x.t("path","name");
x.t("(cgf)","toolkit");
x.t("mak","technologies");
x.t("settings","menu");
x.t("communication","effects");
x.t("communication","capabilities");
x.t("communication","successful");
x.t("communication","model");
x.t("enables","printing");
x.t("enables","verbose");
x.t("enables","debug");
x.t("corresponds","transmitters");
x.t("corresponds","entities");
x.t("corresponds","dis");
x.t("follows","communication");
x.t("follows","client");
x.t("ends","2.3.4");
x.t("ends","statistics");
x.t("tasks","plans");
x.t("stop","pressing");
x.t("stop","button");
x.t("2-4","dis");
x.t("3000","udp");
x.t("perform","following");
x.t("dependent","parameters");
x.t("initializing","first");
x.t("initializing","click");
x.t("soon","modeled");
x.t("avoid","obstacles");
x.t("compatible","external");
x.t("parameters","parameter");
x.t("parameters","table");
x.t("parameters","required");
x.t("parameters","listed");
x.t("parameters","perform");
x.t("parameters","addition");
x.t("parameters","configured");
x.t("parameters","respectively");
x.t("parameters","gui");
x.t("parameters","described");
x.t("parameters","specify");
x.t("65535","default");
x.t("2-5","command");
x.t("2-5","configuring");
x.t("2-5","figure");
x.t("zero","delay");
x.t("window","change");
x.t("window","vr-forces");
x.t("window","display");
x.t("window","starting");
x.t("window","panel");
x.t("provides","intuitive");
x.t("standard","interfacing");
x.t("pdu","vrlink-debug-print-tx-state");
x.t("pdu","potential");
x.t("pdu","heartbeats");
x.t("pdu","section");
x.t("pdu","given");
x.t("pdu","models");
x.t("pdu","global");
x.t("pdu","containing");
x.t("pdu","sent");
x.t("vrlink-debug-print-pdus","destination");
x.t("vrlink-debug-print-pdus","optional");
x.t("sends","signal");
x.t("sends","dis");
x.t("sends","data");
x.t("sends","entity");
x.t("vrlink-dis-port","vrlink-exercise-id");
x.t("vrlink-dis-port","exercise");
x.t("vrlink-dis-port","optional");
x.t("2-6","command");
x.t("2-6","figure");
x.t("2-6","specifying");
x.t("whichever","occurs");
x.t("indicate","entities");
x.t("simualtion-time","parameter");
x.t("loaded","described");
x.t("tanks","tells");
x.t("tanks","move");
x.t("tanks","two");
x.t("restart","simulation");
x.t("2.3.1","describes");
x.t("2.3.1","general");
x.t("acting","communications");
x.t("explained","following");
x.t("stack","communication");
x.t("address","exata");
x.t("address","default");
x.t("address","network");
x.t("address","127.255.255.255");
x.t("address","vrlink-dis-network-interface");
x.t("address","value");
x.t("address","global");
x.t("address","subnet");
x.t("vrlink-site-id","optional");
x.t("vrlink-site-id","application");
x.t("vrlink-receive-delay","max");
x.t("vrlink-receive-delay","optional");
x.t("vrlink-mobility-interval","entities");
x.t("vrlink-mobility-interval","optional");
x.t("destination","pdu");
x.t("destination","address");
x.t("destination","node");
x.t("/scenarios/vrf/unicast-dis","gui");
x.t("allows","non-programmers");
x.t("2-7","following");
x.t("2-7","forces");
x.t("destroy","re-running");
x.t("2.3.2","creating");
x.t("record","entity");
x.t("local","broadcast");
x.t("empty","may");
x.t("empty","socket");
x.t("allow","time");
x.t("coordinates","gcc");
x.t("exata_home","/scenarios/vrf/commsdemo/commsdemo-dis.config");
x.t("exata_home","/scenarios/vrf/commsdemo");
x.t("exata_home","/scenarios/vrf/unicast-dis");
x.t("exata_home","/scenarios/vrf/unicast");
x.t("exata_home","/scenarios/vrf/commsdemo/commsdemo.scn");
x.t("programs","mak");
x.t("started","exata");
x.t("2.3.3","describes");
x.t("2.3.3","sequence");
x.t("addition","parameters");
x.t("earlier","modify");
x.t("127.255.255.255","address");
x.t("127.255.255.255","multicast");
x.t("mask","table");
x.t("mask","entities");
x.t("mask","dependent");
x.t("mask","parameters");
x.t("mask","dis");
x.t("mask","global");
x.t("receiving","last");
x.t("receiving","commands");
x.t("request","communication");
x.t("2.3.4","using");
x.t("begin","simulation");
x.t("mak\u2019s","vr-forces");
x.t("localhost","vr-forces");
x.t("progress","vr-forces");
x.t("2.3.5","describes");
x.t("2.3.5","vr-forces/");
x.t("equivalent","external");
x.t("equivalent","vr-forces");
x.t("equivalent","dis");
x.t("equivalent","scenario");
x.t("equivalent","subnet");
x.t("configured","2.3.4.2");
x.t("configured","described");
x.t("configured","order");
x.t("d.4","exata");
x.t("d.4","consults");
x.t("display","status");
x.t("point","click");
x.t("calculate","damage");
x.t("commands","providing");
x.t("visualization","scenario");
x.t("pause","button");
x.t("occurs","vrlink-debug-print-damage");
x.t("occurs","first");
x.t("occurs","processing");
x.t("damage","field");
x.t("damage","vehicle");
x.t("damage","models");
x.t("damage","global");
x.t("damage","note");
x.t("hosted","radios");
x.t("busy","networks");
x.t("give","control");
x.t("comms","global");
x.t("comms","verbose");
x.t("delay","during");
x.t("delay","global");
x.t("loads","equivalent");
x.t("loads","scenario");
x.t("representation","exata");
x.t("respond","follows");
x.t("damaged","destroyed");
x.t("respectively","exata");
x.t("outlines","procedure");
x.t("superseded","hla");
x.t("appears","entity");
x.t("vrlink-dis-network-interface","parameter");
x.t("vrlink-dis-network-interface","optional");
x.t("vrlink-dis-network-interface","specify");
x.t("minimum","change");
x.t("minimum","amount");
x.t("long","time");
x.t("unit","meters");
x.t("first","time");
x.t("first","client");
x.t("first","entity");
x.t("command-line","based");
x.t("testfed-","exata");
x.t("messages","delivered");
x.t("messages","click");
x.t("messages","displayed");
x.t("button","2008");
x.t("button","exata");
x.t("button","start");
x.t("button","vr-forces");
x.t("button","restart");
x.t("button","begin");
x.t("button","rewind");
x.t("button","simulation");
x.t("means","demo");
x.t("select","open");
x.t("select","external");
x.t("select","connection");
x.t("select","start");
x.t("select","dis");
x.t("communications","effects");
x.t("communications","i.e");
x.t("communications","document");
x.t("communications","settings");
x.t("communications","client");
x.t("communications","environment");
x.t("communications","server");
x.t("5ms","maximum");
x.t("non-blocking","sockets");
x.t("control","back");
x.t("cause","almost");
x.t("communicate","sending");
x.t("communicate","format");
x.t("gui","parameter");
x.t("gui","open");
x.t("gui","start");
x.t("gui","file");
x.t("gui","vr-forces");
x.t("gui","pressing");
x.t("gui","perform");
x.t("gui","allows");
x.t("gui","destination");
x.t("gui","scenario");
x.t("gui","configuration");
x.t("gui","figure");
x.t("gui","simulation");
x.t("number","global");
x.t("processing","message");
x.t("demo","2.3.5.1");
x.t("demo","scenario");
x.t("demo","configuration");
x.t("demo","following");
x.t("demo","run");
x.t("demo","load");
x.t("maximum","amount");
x.t("maximum","transmit");
x.t("reflected","exata");
x.t("reflected","radio");
x.t("max","receive");
x.t("signal","pdus");
x.t("signal","pdu");
x.t("signal","whichever");
x.t("indicating","message");
x.t("enemy","destroy");
x.t("enemy","reports");
x.t("enemy","uav");
x.t("enemy","forces");
x.t("2013","scalable");
x.t("define","protocol");
x.t("unique","among");
x.t("may","long");
x.t("heartbeats","2.3.2.2");
x.t("editor","external");
x.t("receive","delay");
x.t("receive","duration");
x.t("whether","communication");
x.t("whether","representation");
x.t("move","appropriate");
x.t("move","towards");
x.t("different","machines");
x.t("launch","button");
x.t("config-file","name");
x.t("config-file","config-file");
x.t("interaction","simulation");
x.t("dis","extensions");
x.t("dis","interface");
x.t("dis","pdus");
x.t("dis","network");
x.t("dis","dependent");
x.t("dis","address");
x.t("dis","localhost");
x.t("dis","means");
x.t("dis","communications");
x.t("dis","scenario");
x.t("dis","socket");
x.t("dis","format");
x.t("dis","click");
x.t("dis","exercise");
x.t("dis","port");
x.t("dis","protocol");
x.t("dis","note");
x.t("dis","debug");
x.t("dis","model");
x.t("dis","remains");
x.t("dis","unicast");
x.t("scenario","properties");
x.t("scenario","files");
x.t("scenario","refer");
x.t("scenario","external");
x.t("scenario","exata");
x.t("scenario","execution");
x.t("scenario","jointly");
x.t("scenario","start");
x.t("scenario","simulated");
x.t("scenario","need");
x.t("scenario","vr-forces");
x.t("scenario","compatible");
x.t("scenario","loaded");
x.t("scenario","tanks");
x.t("scenario","exata_home");
x.t("scenario","progress");
x.t("scenario","equivalent");
x.t("scenario","define");
x.t("scenario","located");
x.t("scenario","communicating");
x.t("scenario","finished");
x.t("scenario","configuration");
x.t("scenario","right-click");
x.t("scenario","joins");
x.t("scenario","testfed");
x.t("scenario","created");
x.t("scenario","run");
x.t("scenario","simulation");
x.t("scenario","using");
x.t("scenario","behavior");
x.t("scenario","unicast");
x.t("requests","treated");
x.t("requests","vrlink-debug-print-mapping");
x.t("requests","vrlink-debug-print-comms-2");
x.t("(on/off)","screen");
x.t("vrlink-dis-ip-address","parameter");
x.t("vrlink-dis-ip-address","network");
x.t("vrlink-dis-ip-address","optional");
x.t("almost","mobility");
x.t("vrlink-radios-file-path","required");
x.t("vrlink-radios-file-path","networks");
x.t("starting","exata");
x.t("starting","vr-forces");
x.t("starting","simulation");
x.t("transport","information");
x.t("hla","ieee");
x.t("hla","figure");
x.t("hla","protocol");
x.t("section","2.2.2");
x.t("section","describes");
x.t("section","2.3.5.3");
x.t("section","2.3.5.4");
x.t("section","2.3.1");
x.t("section","2.3.3");
x.t("section","2.3.5");
x.t("section","d.4");
x.t("section","outlines");
x.t("section","2.2.2.1.1");
x.t("section","2.2.2.1.2");
x.t("section","2.2.2.1.3");
x.t("section","describe");
x.t("changes","damage");
x.t("socket","parameter");
x.t("socket","recv");
x.t("socket","normally");
x.t("socket","vrlink-receive-delay");
x.t("socket","empty");
x.t("socket","dis");
x.t("socket","used");
x.t("socket","vrlink-dis-subnet-mask");
x.t("socket","specify");
x.t("filename","name");
x.t("format","entities");
x.t("format","networks");
x.t("format","radios");
x.t("directory","exata_home");
x.t("directory","folder");
x.t("opens","figure");
x.t("commsdemo-dis.config","status");
x.t("scope","gui");
x.t("scope","global");
x.t("200ms","minimum");
x.t("node","exata");
x.t("recipients","processed");
x.t("recipients","occurs");
x.t("expected","behavior");
x.t("scenarios","create");
x.t("scenarios","exata");
x.t("scenarios","vr-forces");
x.t("scenarios","dis");
x.t("scenarios","testfed");
x.t("scenarios","positioning");
x.t("client","follows");
x.t("client","soon");
x.t("client","sends");
x.t("client","indicate");
x.t("client","loads");
x.t("client","section");
x.t("client","simulation");
x.t("client","update");
x.t("steps","open");
x.t("steps","listed");
x.t("steps","start");
x.t("steps","explained");
x.t("steps","scenario");
x.t("enable","external");
x.t("enable","dis");
x.t("reduces","simulation");
x.t("follow","roads");
x.t("correspond","dis");
x.t("reports","location");
x.t("groups","radios");
x.t("located","exata_home");
x.t("located","demo");
x.t("vehicle","dynamics");
x.t("fully","configurable");
x.t("centric","operations");
x.t("machines","select");
x.t("folder","exata");
x.t("uav","moves");
x.t("uav","turn");
x.t("comprises","steps");
x.t("listening","sending");
x.t("pending","dis");
x.t("vrlink-xyz-epsilon","mobility");
x.t("vrlink-xyz-epsilon","optional");
x.t("given","radio");
x.t("given","entity");
x.t("message","complete");
x.t("message","delivered");
x.t("message","result");
x.t("environment","section");
x.t("multicast","ttl");
x.t("multicast","address");
x.t("multicast","although");
x.t("multicast","time-to-live");
x.t("formally","superseded");
x.t("communicating","entities");
x.t("event","given");
x.t("n/a","port");
x.t("epsilon","global");
x.t("click","during");
x.t("click","launch");
x.t("click","run");
x.t("click","play");
x.t("enter","following");
x.t("finished","initializing");
x.t("vr-link","interface");
x.t("and/or","multicast");
x.t("simplicity","operation");
x.t("4.1","earlier");
x.t("vrlink-disable-reflected-radio-transmitter-timeouts","optional");
x.t("vrlink-disable-reflected-radio-transmitter-timeouts","setting");
x.t("displayed","command");
x.t("displayed","output");
x.t("configuration","dialog");
x.t("configuration","file");
x.t("configuration","communication");
x.t("configuration","addition");
x.t("configuration","dis");
x.t("configuration","enable");
x.t("configuration","(.config)");
x.t("include","following");
x.t("vrlink-debug-print-comms","optional");
x.t("vrlink-debug-print-comms","debug");
x.t("amount","time");
x.t("2.3.4.1","creating");
x.t("tools","single");
x.t("value","parameter");
x.t("value","indicated");
x.t("value","description");
x.t("value","vrlink-dis-network-interface");
x.t("value","cause");
x.t("value","vrlink-dis-ip-address");
x.t("value","generally");
x.t("power","hosted");
x.t("power","global");
x.t("federation","connection");
x.t("interval","global");
x.t("represented","exata");
x.t("primarily","used");
x.t("running","full");
x.t("running","stop");
x.t("running","joint");
x.t("2.3.4.2","testfed-");
x.t("/scenarios/vrf/unicast","type");
x.t("/scenarios/vrf/unicast","run");
x.t("till","completion");
x.t("terrain","follow");
x.t("right-click","select");
x.t("sensors","look");
x.t("ease","dis");
x.t("send","transmitter");
x.t("figure","2-5");
x.t("figure","2-6");
x.t("figure","2-7");
x.t("figure","2.2.4.2");
x.t("depending","configuration");
x.t("vr-forces/","exata");
x.t("broadcast","address");
x.t("broadcast","and/or");
x.t("radio","note");
x.t("radio","transmitter");
x.t("xyz","epsilon");
x.t("process","message");
x.t("generated","exata");
x.t("programming","necessary");
x.t("connections","configuration");
x.t("exercise","exata");
x.t("exercise","vrlink-site-id");
x.t("exercise","respectively");
x.t("exercise","transport");
x.t("exercise","consisting");
x.t("exercise","values");
x.t("exercise","global");
x.t("exercise","used");
x.t("exercise","simulate");
x.t("although","formally");
x.t("screen","vrlink-debug-print-pdus");
x.t("screen","damage");
x.t("screen","vrlink-debug-print-tx-power");
x.t("screen","entity");
x.t("time-to-live","dis");
x.t("models","traffic");
x.t("models","fully");
x.t("runs","time");
x.t("distribution","primarily");
x.t("simulations","connections");
x.t("panel","vr-forces");
x.t("panel","navigate");
x.t("panel","scenario");
x.t("dynamic","statistics");
x.t("sequence","events");
x.t("consisting","exata");
x.t("output","window");
x.t("output","dis");
x.t("nodes","exata");
x.t("nodes","during");
x.t("nodes","occurs");
x.t("site","global");
x.t("site","used");
x.t("specifying","subnet");
x.t("location","tanks");
x.t("ctrl","command");
x.t("information","simulators");
x.t("information","screen");
x.t("information","received");
x.t("data","units");
x.t("data","pdu");
x.t("capabilities","damage");
x.t("capabilities","communicating");
x.t("configure","dis");
x.t("configure","simulation");
x.t("optional","scope");
x.t("dump","dis");
x.t("typical","dis");
x.t("overhead","running");
x.t("tool","appendix");
x.t("interact","terrain");
x.t("sensor","updates");
x.t("sensor","capabilities");
x.t("vrlink-debug-print-tx-power","optional");
x.t("vrlink-debug-print-tx-power","debug");
x.t("decreases","maximum");
x.t("moved","within");
x.t("received","initialization");
x.t("received","transmitter");
x.t("appropriate","exata");
x.t("result","indicating");
x.t("result","summarizing");
x.t("timeout","value");
x.t("timeout","result");
x.t("application","acting");
x.t("application","number");
x.t("application","unique");
x.t("application","site");
x.t("4000","application");
x.t("successful","exata");
x.t("successful","zero");
x.t("successful","call");
x.t("meters","minimum");
x.t("disable","reflected");
x.t("4.0.4","vr-forces");
x.t("values","vrlink-dis-port");
x.t("procedure","starting");
x.t("procedure","using");
x.t("described","appendix");
x.t("described","below");
x.t("described","table");
x.t("described","section");
x.t("global","vrlink-debug-print-damage");
x.t("global","vrlink-entities-file-path");
x.t("global","vrlink-networks-file-path");
x.t("global","vrlink-debug-print-transmitter-pdu");
x.t("global","vrlink-debug-print-mobility");
x.t("global","time");
x.t("global","vrlink-debug-print-tx-state");
x.t("global","list");
x.t("global","vrlink-max-receive-duration");
x.t("global","vrlink-application-number");
x.t("global","vrlink-debug-print-pdus");
x.t("global","vrlink-dis-port");
x.t("global","address");
x.t("global","vrlink-site-id");
x.t("global","vrlink-receive-delay");
x.t("global","vrlink-mobility-interval");
x.t("global","vrlink-dis-network-interface");
x.t("global","vrlink-dis-ip-address");
x.t("global","vrlink-radios-file-path");
x.t("global","filename");
x.t("global","vrlink-xyz-epsilon");
x.t("global","n/a");
x.t("global","vrlink-disable-reflected-radio-transmitter-timeouts");
x.t("global","vrlink-debug-print-comms");
x.t("global","vrlink-debug-print-tx-power");
x.t("global","integer");
x.t("global","vrlink-multicast-ttl");
x.t("global","real");
x.t("global","vrlink-dis-exercise-id");
x.t("global","vrlink-dis-subnet-mask");
x.t("global","vrlink-debug-print-mapping");
x.t("global","vrlink-debug-print-comms-2");
x.t("probabilistically","decreases");
x.t("port","exata");
x.t("port","dis");
x.t("port","exercise");
x.t("port","global");
x.t("called","again");
x.t("print","state");
x.t("print","mobility");
x.t("print","pdus");
x.t("print","comms");
x.t("print","damage");
x.t("print","power");
x.t("print","mapping");
x.t("print","transmitter");
x.t("phase","exata");
x.t("phase","depending");
x.t("re-running","simulation");
x.t("rewind","button");
x.t("protocol","supports");
x.t("protocol","uses");
x.t("protocol","parameters");
x.t("protocol","stack");
x.t("protocol","mak\u2019s");
x.t("protocol","dis");
x.t("protocol","section");
x.t("protocol","comprises");
x.t("protocol","vr-link");
x.t("protocol","include");
x.t("protocol","data");
x.t("protocol","note");
x.t("protocol","testfed");
x.t("protocol","run");
x.t("protocol","general");
x.t("protocol","2.3");
x.t("protocol","distributed");
x.t("protocol","without");
x.t("protocol","versions");
x.t("note","parameter");
x.t("note","press");
x.t("note","exata");
x.t("note","default");
x.t("note","want");
x.t("note","application");
x.t("note","entity");
x.t("verbose","global");
x.t("verbose","debug");
x.t("transmit","power");
x.t("integer","range");
x.t("vrlink-multicast-ttl","receive");
x.t("vrlink-multicast-ttl","optional");
x.t("summarizing","delivery");
x.t("done","using");
x.t("two","tanks");
x.t("debug","messages");
x.t("debug","output");
x.t("debug","print");
x.t("disables","timeouts");
x.t("joins","exercise");
x.t("testfed","uses");
x.t("testfed","exata");
x.t("testfed","test");
x.t("testfed","dis");
x.t("testfed","section");
x.t("testfed","testfed");
x.t("testfed","run");
x.t("based","program");
x.t("positioning","forces");
x.t("itself","vr-forces");
x.t("/scenarios/vrf/commsdemo/commsdemo.scn","note");
x.t("created","exata");
x.t("order","dis");
x.t("mapping","global");
x.t("mapping","entity");
x.t("call","recv");
x.t("real","range");
x.t("2.2.2.1.1","vrlink-radios-file-path");
x.t("2.2.2.1.1","format");
x.t("obstacles","detect");
x.t("joint","simulation");
x.t("simulation","moves");
x.t("simulation","(dis)");
x.t("simulation","2.3.5.4");
x.t("simulation","kernel");
x.t("simulation","external");
x.t("simulation","time");
x.t("simulation","exata");
x.t("simulation","assumes");
x.t("simulation","engine");
x.t("simulation","command");
x.t("simulation","initialization");
x.t("simulation","again");
x.t("simulation","ends");
x.t("simulation","started");
x.t("simulation","button");
x.t("simulation","gui");
x.t("simulation","scenario");
x.t("simulation","section");
x.t("simulation","client");
x.t("simulation","tools");
x.t("simulation","running");
x.t("simulation","connections");
x.t("simulation","runs");
x.t("simulation","exercise");
x.t("simulation","tool");
x.t("simulation","application");
x.t("simulation","starts");
x.t("simulation","run");
x.t("simulation","forces");
x.t("model","needs");
x.t("model","effects");
x.t("model","support");
x.t("run","current");
x.t("run","exata");
x.t("run","commsdemo");
x.t("run","machine");
x.t("run","demo");
x.t("run","different");
x.t("run","dis");
x.t("run","scenario");
x.t("run","till");
x.t("run","testfed");
x.t("run","itself");
x.t("run","simulation");
x.t("following","parameter");
x.t("following","sections");
x.t("following","start");
x.t("following","command");
x.t("following","select");
x.t("following","steps");
x.t("following","simulation");
x.t("entity","suffers");
x.t("entity","appearance");
x.t("entity","state");
x.t("entity","sends");
x.t("entity","damage");
x.t("entity","whether");
x.t("entity","changes");
x.t("entity","moved");
x.t("entity","setting");
x.t("entity","deactivate");
x.t("entity","update");
x.t("hex","dump");
x.t("subnet","mask");
x.t("used","federates");
x.t("used","test");
x.t("used","listening");
x.t("used","federation");
x.t("theoretically","busy");
x.t("500ms","minimum");
x.t("scheduled","mobility");
x.t("2.2.2.1.2","vrlink-networks-file-path");
x.t("2.2.2.1.2","format");
x.t("starts","warm-up");
x.t("starts","initialization");
x.t("starts","initializing");
x.t("starts","simulation");
x.t("either","unsuccessful");
x.t("either","timeout");
x.t("perfect","communications");
x.t("system","panel");
x.t("turn","sensors");
x.t("using","sample");
x.t("using","exata");
x.t("using","udp");
x.t("using","dis");
x.t("using","hla");
x.t("using","forces");
x.t("general","simulating");
x.t("general","procedure");
x.t("2.3.2.1","command");
x.t("vrlink-dis-subnet-mask","2.3.3");
x.t("vrlink-dis-subnet-mask","optional");
x.t("duration","give");
x.t("duration","global");
x.t("setting","large");
x.t("setting","parameters");
x.t("setting","value");
x.t("2.2.2.1.3","format");
x.t("2.2.2.1.3","vrlink-disable-reflected-radio-transmitter-timeouts");
x.t("vrlink-dis-exercise-id","site");
x.t("containing","process");
x.t("containing","timeout");
x.t("play","button");
x.t("routes","waypoints");
x.t("distributed","interaction");
x.t("2.3","distributed");
x.t("statistics","file");
x.t("statistics","using");
x.t("pass","last");
x.t("2.3.2.2","gui");
x.t("consults","entities");
x.t("assigning","tasks");
x.t("vehicles","interact");
x.t("performed","using");
x.t("load","file");
x.t("load","scenario");
x.t("simulate","scenario");
x.t("simulate","communicating");
x.t("modify","scenario");
x.t("waits","empty");
x.t("waits","first");
x.t("associated","exata");
x.t("without","overhead");
x.t("behavior","scenario");
x.t("behavior","testfed");
x.t("behavior","behavior");
x.t("behavior","unicast");
x.t("2.2.4.2","details");
x.t("operations","run");
x.t("towards","enemy");
x.t("versions","note");
x.t("(.config)","file");
x.t("vrlink-debug-print-mapping","optional");
x.t("vrlink-debug-print-mapping","debug");
x.t("transmitter","state");
x.t("transmitter","objects");
x.t("transmitter","pdus");
x.t("transmitter","timeouts");
x.t("transmitter","pdu");
x.t("127.0.0.1","address");
x.t("position","change");
x.t("intuitive","gui");
x.t("describe","run");
x.t("forces","exata");
x.t("forces","(cgf)");
x.t("forces","creating");
x.t("forces","calculate");
x.t("forces","first");
x.t("forces","enable");
x.t("forces","simulation");
x.t("radios","files");
x.t("radios","turned");
x.t("radios","file");
x.t("radios","communicate");
x.t("radios","entity");
x.t("radios","removed");
x.t("removed","seconds");
x.t("sent","client");
x.t("complexity","scenario");
x.t("deactivate","associated");
x.t("toolkit","provides");
x.t("plans","simple");
x.t("remains","popular");
x.t("popular","today");
x.t("server","simulation");
x.t("user\u2019s","guide");
x.t("vrlink-debug-print-comms-2","optional");
x.t("vrlink-debug-print-comms-2","debug");
x.t("generally","reduces");
x.t("seconds","receiving");
x.t("specify","subnet");
x.t("update","received");
x.t("update","entity");
x.t("update","sent");
x.t("unicast","press");
x.t("unicast","scenario");
x.t("unicast","located");
}

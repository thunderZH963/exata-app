function FileData_Pairs(x)
{
x.t("ignore","entity");
x.t("example","high-power-802.11b");
x.t("root","hierarchy");
x.t("properties","nodes");
x.t("parameter","used");
x.t("placed","root");
x.t("placed","different");
x.t("protocols","placed");
x.t("2008","2013");
x.t("within","federation");
x.t("scalable","network");
x.t("sufficient","detail");
x.t("create","node");
x.t("create","reasonable");
x.t("describes","properties");
x.t("describes","rules");
x.t("try","create");
x.t("field","acts");
x.t("uses","default");
x.t("type","vr-forces");
x.t("type","record");
x.t("type","router-model");
x.t("type","defined");
x.t("type","used");
x.t("exata","hierarchies");
x.t("exata","scenario");
x.t("exata","node");
x.t("exata","nodes");
x.t("exata","model");
x.t("a.5.1","describes");
x.t("a.5.1","configuring");
x.t("high-power-802.11b","vrlink-radio-system-type");
x.t("high-power-802.11b","router");
x.t("vrlink-radio-system-type","7.1.225.2.1.20");
x.t("explicitly","members");
x.t("hierarchy","2008");
x.t("multiple","associated");
x.t("vrlink-radio-sytem-type","parameter");
x.t("a.5.2","defining");
x.t("mobility","communication");
x.t("entities","within");
x.t("entities","explicitly");
x.t("entities","incompatible");
x.t("entities","mapped");
x.t("entities","different");
x.t("entities","radio");
x.t("default","radio");
x.t("mac","network");
x.t("synchronizer","ignore");
x.t("synchronizer","sufficient");
x.t("synchronizer","create");
x.t("synchronizer","try");
x.t("synchronizer","a.5");
x.t("single","exata");
x.t("objects","entities");
x.t("objects","radios");
x.t("card","matches");
x.t("hierarchies","placed");
x.t("hierarchies","entities");
x.t("assign","phy");
x.t("network","protocols");
x.t("network","technologies");
x.t("network","parameters");
x.t("network","topology");
x.t("configuring","nodes");
x.t("vr-forces","7.1.225.2.1.20");
x.t("a.5","extraction");
x.t("communication","entities");
x.t("communication","capabilities");
x.t("aggregate","entities");
x.t("aggregate","entity");
x.t("parameters","exata");
x.t("parameters","radio");
x.t("six-field","dis/hla");
x.t("determine","network");
x.t("determine","radio");
x.t("map","router");
x.t("record","field");
x.t("record","type");
x.t("incompatible","mac");
x.t("defining","topology");
x.t("dis/hla","radio");
x.t("extraction","rules");
x.t("configured","describes");
x.t("mapped","exata");
x.t("mapped","single");
x.t("acts","wild");
x.t("members","aggregate");
x.t("number","associated");
x.t("2013","scalable");
x.t("phy-model","phy802.11b");
x.t("phy802.11-auto-rate-fallback","a.5.2");
x.t("different","hierarchies");
x.t("different","force");
x.t("different","subnets");
x.t("extractor","synchronizer");
x.t("scenario","a.5.1");
x.t("scenario","configured");
x.t("scenario","section");
x.t("scenario","created");
x.t("index","determine");
x.t("section","a.5.1");
x.t("types","map");
x.t("node","exata");
x.t("node","entity");
x.t("assigns","nodes");
x.t("ids","placed");
x.t("topology","exata");
x.t("topology","extractor");
x.t("topology","assigns");
x.t("matches","value");
x.t("rules","exata");
x.t("rules","entities");
x.t("rules","a.5");
x.t("rules","defining");
x.t("rules","extractor");
x.t("router-model","high-power-802.11b");
x.t("federation","communication");
x.t("federation","mapped");
x.t("federation","entity");
x.t("value","example");
x.t("value","radio");
x.t("phy802.11b","phy802.11-auto-rate-fallback");
x.t("phy802.11b","phy-rx-model");
x.t("phy-rx-model","phy802.11b");
x.t("radio","type");
x.t("radio","objects");
x.t("radio","types");
x.t("radio","federation");
x.t("radio","entity");
x.t("radio","router");
x.t("force","ids");
x.t("802.11b","parameters");
x.t("reasonable","network");
x.t("subnets","entities");
x.t("subnets","aggregate");
x.t("subnets","based");
x.t("nodes","exata");
x.t("nodes","number");
x.t("nodes","subnets");
x.t("nodes","entity");
x.t("phy","802.11b");
x.t("capabilities","extractor");
x.t("defined","using");
x.t("7.1.225.2.1.20","assign");
x.t("7.1.225.2.1.20","phy-model");
x.t("based","following");
x.t("created","extractor");
x.t("entity","placed");
x.t("entity","type");
x.t("entity","multiple");
x.t("entity","objects");
x.t("entity","federation");
x.t("entity","associated");
x.t("used","determine");
x.t("used","index");
x.t("model","uses");
x.t("model","vrlink-radio-sytem-type");
x.t("model","value");
x.t("model","radio");
x.t("router","model");
x.t("following","rules");
x.t("using","six-field");
x.t("simulate","mobility");
x.t("associated","radio");
x.t("associated","radios");
x.t("wild","card");
x.t("radios","extractor");
x.t("radios","radio");
x.t("radios","gets");
x.t("detail","simulate");
x.t("gets","mapped");
}
